[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Survey Design and Analysis",
    "section": "",
    "text": "Preface\nSurvey analysis starts with a problem/objectives statement, understanding of the sample design, respondent attributes, and underlying constructs. Only then does the data analysis begin. The survey objective may be to describe the characteristics of the target population, or to infer statistical relationship (causal or associative).",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "01-item_selection.html",
    "href": "01-item_selection.html",
    "title": "1  Item Selection",
    "section": "",
    "text": "1.1 Reliability and Validity\nA high quality survey will be both reliable (consistent) and valid (accurate).1 A reliable survey is reproducible under similar conditions. It produces consistent results across time, samples, and sub-samples within the survey itself. Reliable surveys are not necessarily accurate though. A valid survey accurately measures its latent variable. Its results are compatible with established theory and with other measures of the concept. Valid surveys are usually reliable too.\nReliability can entail one or more of the following:\nThere are three assessments of validity:\nSurvey considerations\nQuality of Measurement: Reliability and Validity (internal and external)\nPretest and pilot test\nProbability Sampling: - simple random, systematic random, stratified random, cluster, and multistate cluster. - power analysis\nReporting - Descriptive statistics - Write-up\nContinuous latent variables (e.g., level of satisfaction) can be measured with factor analysis (exploratory and confirmatory) or item response theory (IRT) models. Categorical or discrete variables (e.g., market segment) can be modeled with latent class analysis (LCA) or latent mixture modeling. You can even combine models, e.g., satisfaction within market segment.\nIn practice, you specify the model, evaluate the fit, then revise the model or add/drop items from the survey.\nA full survey project usually consists of six phases.2",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Item Selection</span>"
    ]
  },
  {
    "objectID": "01-item_selection.html#reliability-and-validity",
    "href": "01-item_selection.html#reliability-and-validity",
    "title": "1  Item Selection",
    "section": "",
    "text": "Inter-rater reliability (aka Equivalence). Each survey item is unambiguous, so subject matter experts should respond identically. This applies to opinion surveys of factual concepts, not personal preference surveys. E.g., two psychologists completing a survey assessing a patient’s mental health should respond identically. Use the Cohen’s Kappa test of inter-rater reliability to test equivalence (see Section @ref(itemgeneration) on item generation).\nInternal consistency. Survey items measuring the same latent variable are highly correlated. Use the Cronbach alpha test and split-half test to assess internal consistency (see Section @ref(itemreduction) on item reduction).\nStability (aka Test-retest). Repeated measurements yield the same results. You use the test-retest construct to assess stability in the Replication phase.\n\n\n\nContent validity. The survey items cover all aspects of the latent variable. Use Lawshe’s CVR to assess content validity (see Section @ref(itemgeneration) on item generation).\nConstruct validity. The survey items are properly grounded on a theory of the latent variable. Use convergent analysis and discriminant analysis to assess construct validity in the Convergent/Discriminant Validity phase.\nCriterion validity. The survey item results correspond to other valid measures of the same latent variable. Use concurrent analysis and predictive analysis to assess criterion validity in the Replication phase.\n\n\n\nQuestion order, selection order\nrespondent burden and fatigue\n\n\n\n\n\n\n\n\n\nItem Generation (Section @ref(itemgeneration)). Start by generating a list of candidate survey items. With help from SMEs, you evaluate the equivalence (interrater reliability) and content validity of the candidate survey items and pare down the list into the final survey.\nSurvey Administration (Section @ref(surveyadministration)). Administer the survey to respondents and perform an exploratory data analysis. Summarize the Likert items with plots and look for correlations among the variables.\nItem Reduction (Section @ref(itemreduction)). Explore the dimensions of the latent variable in the survey data with parallel analysis and exploratory factor analysis. Assess the internal consistency of the items with Cronbach’s alpha and split-half tests, and remove items that do not add value and/or amend your theory of the number of dimensions.\nConfirmatory Factor Analysis (Section @ref(confirmatoryfactoranalysis)). Perform a formal hypothesis test of the theory that emerged from the exploratory factor analysis.\nConvergent/Discriminant Validity (Section @ref(convergentvalidity)). Test for convergent and discriminant construct validity.\nReplication (Section @ref(replication)). Establish test-retest reliability and criterion validity.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Item Selection</span>"
    ]
  },
  {
    "objectID": "01-item_selection.html#itemgeneration",
    "href": "01-item_selection.html#itemgeneration",
    "title": "1  Item Selection",
    "section": "1.2 Item Generation",
    "text": "1.2 Item Generation\nDefine your latent variable(s), that is, the unquantifiable variables you intend to infer from variables you can quntify. E.g., “Importance of 401(k) matching”\nAfter you generate a list of candidate survey items, enlist SMEs to assess their inter-rater reliability with Cohen’s Kappa and content validity with Lawshe’s CVR.\n\n1.2.1 Cohen’s Kappa\nAn item has inter-rater reliability if it produces consistent results across raters. One way to test this is by having SMEs take the survey. Their answers should be close to each other. Conduct an inter-rater reliability test by measuring the statistical significance of SME response agreement using the Kohen’s kappa test statistic.\nSuppose your survey measures brand loyalty and two SMEs answer 13 survey items like this. The SMEs agreed on 6 of the 13 items (46%).\n\nsme %&gt;% mutate(agreement = RATER_A == RATER_B)\n\n   RATER_A RATER_B agreement\n1        1       1      TRUE\n2        2       2      TRUE\n3        3       2     FALSE\n4        2       3     FALSE\n5        1       3     FALSE\n6        1       1      TRUE\n7        1       1      TRUE\n8        2       1     FALSE\n9        3       2     FALSE\n10       3       3      TRUE\n11       2       3     FALSE\n12       1       3     FALSE\n13       1       1      TRUE\n\n\nYou could measure SME agreement with a simple correlation matrix (cor(sme)) or by measuring the percentage of items they rate identically (irr::agree(sme)), but these measures do not test for statistical validity.\n\ncor(sme)\n##           RATER_A   RATER_B\n## RATER_A 1.0000000 0.3291403\n## RATER_B 0.3291403 1.0000000\nirr::agree(sme)\n##  Percentage agreement (Tolerance=0)\n## \n##  Subjects = 13 \n##    Raters = 2 \n##   %-agree = 46.2\n\nInstead, calculate the Kohen’s kappa test statistic, \\(\\kappa\\), to assess statistical validity. Cohen’s kappa compares the observed agreement (accuracy) to the probability of chance agreement. \\(\\kappa\\) &gt;= 0.8 is very strong agreement, \\(\\kappa\\) &gt;= 0.6 substantial, \\(\\kappa\\) &gt;= 0.4 moderate, and \\(\\kappa\\) &lt; 0.4 is poor agreement. In this example, \\(\\kappa\\) is only 0.32 (poor agreement).\n\npsych::cohen.kappa(sme)\n\nCall: cohen.kappa1(x = x, w = w, n.obs = n.obs, alpha = alpha, levels = levels, \n    w.exp = w.exp)\n\nCohen Kappa and Weighted Kappa correlation coefficients and confidence boundaries \n                 lower estimate upper\nunweighted kappa -0.18     0.19  0.55\nweighted kappa   -0.13     0.32  0.76\n\n Number of subjects = 13 \n\npsych::cohen.kappa(sme2)\n\nCall: cohen.kappa1(x = x, w = w, n.obs = n.obs, alpha = alpha, levels = levels, \n    w.exp = w.exp)\n\nCohen Kappa and Weighted Kappa correlation coefficients and confidence boundaries \n                 lower estimate upper\nunweighted kappa -0.22     0.17  0.56\nweighted kappa    0.30     0.56  0.83\n\n Number of subjects = 13 \n\n\nUse the weighted kappa for ordinal measures like Likert items (see Wikipedia).\n\n\n1.2.2 Lawshe’s CVR\nAn item has content validity if SMEs agree on its relevance to the latent variable. Test content validity with Lawshe’s content validity ratio (CVR),\n\\[CVR = \\frac{E - N/2}{N/2}\\] where \\(N\\) is the number of SMEs and \\(E\\) is the number who rate the item as essential. CVR can range from -1 to 1. E.g., suppose three SMEs (A, B, and C) assess the relevance of 5 survey items as “Not Necessary”, “Useful”, or “Essential”:\n\n\n  item            A            B            C\n1    1    Essential       Useful Not necesary\n2    2       Useful Not necesary       Useful\n3    3 Not necesary Not necesary    Essential\n4    4    Essential       Useful    Essential\n5    5    Essential    Essential    Essential\n\n\nUse the psychometric::CVratio() function to calculate CVR. The threshold CVR to keep or drop an item depends on the number of raters. CVR should be &gt;= 0.99 for 5 experts; &gt;= 0.49 for 15, and &gt;= 0.29 for 40.\n\nsme2 %&gt;% \n  pivot_longer(-item, names_to = \"expert\", values_to = \"rating\") %&gt;%\n  group_by(item) %&gt;% \n  summarize(.groups = \"drop\",\n            n_sme = length(unique(expert)),\n            n_ess = sum(rating == \"Essential\"),\n            CVR = psychometric::CVratio(NTOTAL = n_sme, NESSENTIAL = n_ess))\n\n# A tibble: 5 × 4\n   item n_sme n_ess    CVR\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;  &lt;dbl&gt;\n1     1     3     1 -0.333\n2     2     3     0 -1    \n3     3     3     1 -0.333\n4     4     3     2  0.333\n5     5     3     3  1    \n\n\nIn this example, items vary widely in content validity from unanimous consensus for to unanimous consensus against.\n\n\n\n\nMiddleton, Fiona. 2022. “Reliability Vs. Validity in Research | Difference, Types and Examples.” https://www.scribbr.com/methodology/reliability-vs-validity/.\n\n\nMount, George. n.d. “Survey and Measurement Development in r.” https://app.datacamp.com/learn/courses/survey-and-measurement-development-in-r.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Item Selection</span>"
    ]
  },
  {
    "objectID": "01-item_selection.html#footnotes",
    "href": "01-item_selection.html#footnotes",
    "title": "1  Item Selection",
    "section": "",
    "text": "This section is aided by Fiona Middleton’s “Reliability vs. Validity in Research | Difference, Types and Examples” (Middleton 2022).↩︎\nThis section is primarily from George Mount’s Data Camp course (Mount, n.d.).↩︎",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Item Selection</span>"
    ]
  },
  {
    "objectID": "02-sample_size.html",
    "href": "02-sample_size.html",
    "title": "2  Sample Size",
    "section": "",
    "text": "2.1 Simple Random Sampling",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Sample Size</span>"
    ]
  },
  {
    "objectID": "02-sample_size.html#srs",
    "href": "02-sample_size.html#srs",
    "title": "2  Sample Size",
    "section": "",
    "text": "2.1.1 Continuous Values\nSuppose you estimate a population (univeral) mean, \\(\\bar{y}_U\\), from the mean of a simple random sample, \\(\\bar{y}_s\\). Under repeated sampling, the sample means would have variance related to the population variance, \\(S^2\\).\n\\[\nV(\\bar{y}_s) = \\left(1 - \\frac{n}{N} \\right) \\frac{S^2}{n}\n\\tag{2.1}\\]\nEquation 2.1 is the square of the standard error with a finite population correction factor (FPC), \\(1 - n / N\\). The FPC reduces the expected variance for small populations. In practice, the FPC is only important for sample size calculations when \\(n/N &lt; .05\\) - frequently the case in internal company surveys. \\(S\\) is an unknown population parameter estimated from the sample, \\(s\\), or by a rule of thumb.\nThe ratio \\(V(\\bar{y}_s) / \\bar{y}_U^2\\) is the square of the targeted coefficient of variation, \\(CV_0\\).\n\\[\nCV_0^2(\\bar{y}) = \\left(1 - \\frac{n}{N} \\right) \\cdot \\frac{1}{n} \\cdot \\frac{S^2}{\\bar{y}_U^2}\n\\tag{2.2}\\]\nSolve Equation 2.2 for the required sample size to achieve \\(CV_0(\\bar{y}_s)\\).\n\\[\nn = \\frac{S^2 / \\bar{y}_U^2}{CV_0^2 + S^2 / (N \\cdot \\bar{y}_U^2)}\n\\tag{2.3}\\]\nThe numerator in Equation 2.3 is the population CV (a.k.a., unit CV).\nUse PracTools::nCont() to calculate \\(n\\). Setting the unit CV is somewhat of a chicken-and-egg problem since \\(S^2\\) and \\(\\bar{y}_U^2\\) are the population parameters you are estimating. Either rely on prior research or a best guess. The range rule of thumb is \\(S = \\mathrm{range} / 4\\). The targeted CV is usually set to 5% or 10%, or something better than prior research.\nExample. Prior experience suggests the unit CV is approximately \\(2\\). Your survey targets \\(CV_0(\\bar{y}_s) = 0.05\\).\n\n# N defaults to Inf. Use this for \"large\" populations.\nPracTools::nCont(CV0 = .05, CVpop = 2)\n## [1] 1600\n\n# For a company survey, include N. for 10,000 employees you can survey a few less.\nPracTools::nCont(CV0 = .05, CVpop = 2, N = 10000)\n## [1] 1379.31\n\n# Even for a small population, you can still survey about half.\nPracTools::nCont(CV0 = .05, CVpop = 2, N = 1000)\n## [1] 615.3846\n\n# If you don't know CVpop or ybarU and S2, but have an expectation about ybarU \n# and the range, use the range rule of thumb.\nPracTools::nCont(CV0 = .10, S2 = (abs(0 - 800) / 4)^2, ybarU = 100) |&gt; ceiling()\n## [1] 400\n\nWhen does N become important? It depends on CV0, but N=20,000 seems to be upper limit.\n\n\n\n\n\n\n\n\n\nAlternatively, you can target a margin of error.\n\\[\nMOE = t_{(1-\\alpha), (n-1)} SE(\\bar{y})\n\\tag{2.4}\\]\nExample. You want a margin of error of 20. You estimate an overall range of 800.\n\nPracTools::nContMoe(moe.sw = 1, e = 20, S2 = (abs(0 - 800) / 4)^2) |&gt; ceiling()\n\n[1] 385\n\n\n\n\n2.1.2 Proportions\nIf the population parameter is a proportion, \\(p\\), the CV is\n\\[\nCV^2(p_s) = \\left(1 - \\frac{n}{N} \\right) \\cdot \\frac{1}{n} \\cdot \\frac{N}{N-1} \\cdot \\frac{1 - p_U}{p_U}\n\\tag{2.5}\\]\nwhere \\(\\frac{N}{N-1} \\cdot \\frac{1 - p_U}{p_U}\\) is the square of the unit CV. When \\(N\\) is large, Equation 2.5 reduces to \\(CV^2(p_s) \\approx \\frac{1}{n} \\cdot \\frac{1 - p_U}{P_U}\\). From here you can see that \\(n\\) varies inversely with \\(p_U\\). PracTools::nProp() calculates \\(n\\) for proportions.\nExample. From prior experience you think \\(p_U = .01\\) and \\(N\\) is large. You set a targeted CV of \\(CV_0^2(p_s) = 0.05\\).\n\nPracTools::nProp(CV0 = .05, pU = .01)\n## [1] 39600\n\nWhoa, \\(n\\) is huge!\nYou might choose to target a margin of error instead, \\(MOE = \\pm z_{1-\\alpha} \\cdot SE\\). Recall that \\(P(|p_s - p_U| &lt; MOE) = 1 - \\alpha\\). PracTools::nPropMoe() and PracTools::nContMoe() calculate \\(n\\) for MOEs.\nExample. Continuing from above, suppose you set a tolerance of a half percentage point, \\(MOE \\pm 0.5\\%\\).\n\nMOE &lt;- .005\n\n# moe.sw = 1 sets MOE based on SE; moe.sw = 2 sets MOE based on CV.\nPracTools::nPropMoe(moe.sw = 1, e = MOE, alpha = .05, pU = .01)\n## [1] 1521.218\n\n# The long way using nProp: \n(z_025 &lt;- qnorm(p = .05/2, lower.tail = FALSE))\n## [1] 1.959964\n(SE &lt;- MOE / z_025)\n## [1] 0.002551067\nPracTools::nProp(V0 = SE^2, pU = .01)\n## [1] 1521.218\n\n# When pU is extreme (~0 or ~1), the 95% CI can pass the [0,1] limits. The \n# Wilson  method accounts for that (not discussed here). Notice the 95% CI is\n# not symmetric about pU. The 95% CI calculation is one of the reasons it is\n# used.\nPracTools::nWilson(moe.sw = 1, e = MOE, alpha = .05, pU = .01)\n## $n.sam\n## [1] 1605.443\n## \n## $`CI lower limit`\n## [1] 0.00616966\n## \n## $`CI upper limit`\n## [1] 0.01616966\n## \n## $`length of CI`\n## [1] 0.01\n\n# The log odds is another approach that does about the same thing.\nPracTools::nLogOdds(moe.sw = 1, e = MOE, alpha = .05, pU = .01)\n## [1] 1637.399",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Sample Size</span>"
    ]
  },
  {
    "objectID": "02-sample_size.html#stratified-srs",
    "href": "02-sample_size.html#stratified-srs",
    "title": "2  Sample Size",
    "section": "2.2 Stratified SRS",
    "text": "2.2 Stratified SRS\nStratified samples partition the population by dimensions of interest before sampling. This way, important domains are assured of adequate representation. Stratifying often reduce variances. Choose stratification if i) an SRS risks poor distribution across the population, ii) you have domains you will study separately, or iii) there are units with similar mean and variances that can be grouped to increase efficiency.\nIn a stratified design, the measured mean or proportion of the population is the simple weighted sum of the \\(h\\) strata, \\(\\bar{y}_{st} = \\sum{W_h}\\bar{y}_{sh}\\) and \\(p_{st} = \\sum{W_h}p_{sh}\\). The population sampling variance is analogous,\n\\[\n\\begin{equation}\nvar(\\bar{y}_{st}) = \\sum W_h^2 \\cdot \\left(1 - \\frac{n_h}{N} \\right) \\cdot \\frac{1}{n_h} \\cdot S_h^2.\n(\\#eq:var-stratified)\n\\end{equation}\n\\]\nUse the SRS sampling methods described in Section @ref(srs) to estimate each stratum.\nThe effect of stratification relative to SRS is captured in the design effect ratio,\n\\[\nD^2(\\hat{\\theta}) = \\frac{var(\\hat{\\theta})_\\mathrm{complex}}{var(\\hat{\\theta})_\\mathrm{SRS}}\n\\]\nExample. Suppose you are measuring expenditure within a company of \\(N = 875\\) employees and want to stratify by the \\(h = 6\\) departments. You target a \\(CV_0(\\bar{y_s}) = .10.\\)\n\ndata(smho98, package = \"PracTools\")\n\n# You'll survey 560 people across the 16 strata.\nsmho98 %&gt;%\n  group_by(STRATUM) %&gt;%\n  summarize(Nh = n(), Mh = mean(EXPTOTAL), Sh = sd(EXPTOTAL)) %&gt;%\n  mutate(\n    CVpop = Sh / Mh,\n    nh = map2_dbl(CVpop, Nh, ~PracTools::nCont(CV0 = .10, CVpop = .x, N = .y) %&gt;% ceiling())\n  ) %&gt;%\n  janitor::adorn_totals(\"row\", fill = NULL, na.rm = FALSE, name = \"Total\", Nh, nh)\n##  STRATUM  Nh         Mh         Sh     CVpop  nh\n##        1 151 13066021.0 14792181.7 1.1321107  70\n##        2  64 40526852.3 37126887.6 0.9161059  37\n##        3  43 11206761.2 11531709.1 1.0289957  31\n##        4  22  7714828.7  8422580.5 1.0917391  19\n##        5 150  4504517.9  6228212.0 1.3826589  85\n##        6  23  2938983.2  3530750.8 1.2013511  20\n##        7  65  7207527.1  9097011.5 1.2621543  47\n##        8  14  1879611.1  1912347.8 1.0174168  13\n##        9  38 13841123.7 11609453.3 0.8387652  25\n##       10  12  5867993.8  6427340.3 1.0953216  11\n##       11  13   925512.8   659352.8 0.7124189  11\n##       12  77  4740554.8  6905571.9 1.4567012  57\n##       13  59  9060838.1 12884439.0 1.4219920  46\n##       14  86  9511349.0  6741831.0 0.7088196  32\n##       15  39 34251923.7 82591916.4 2.4113074  37\n##       16  19  4629061.5  9817393.7 2.1208173  19\n##    Total 875         NA         NA        NA 560\n\n# What if we don't stratify? Only 290!\nsmho98 %&gt;%\n  summarize(Nh = n(), Mh = mean(EXPTOTAL), Sh = sd(EXPTOTAL)) %&gt;%\n  mutate(\n    CVpop = Sh / Mh,\n    nh = map2_dbl(CVpop, Nh, ~PracTools::nCont(CV0 = .10, CVpop = .x, N = .y) %&gt;% ceiling())\n  ) %&gt;% janitor::as_tabyl()\n##   Nh       Mh       Sh    CVpop  nh\n##  875 11664181 24276522 2.081288 290\n\nIf a fixed budget constrains you to \\(n\\) participants you have five options: i) if \\(S_h\\) are approximately equal and you are okay with small stratum getting very few units, allocate \\(n\\) by proportion, \\(n_h = nW_h\\); ii) if your strata are study domains, allocate \\(n\\) equally, \\(n_h = n / H\\); iii) use Neyman allocation to minimize the population sampling variance; iv) use cost-constrained allocation to minimize cost, or v) use precision-constrained allocation to minimize population sampling variance. Options iv and v take into account variable costs. Use function PracTools::strAlloc().\nThe Neyman allocation allocates by stratum weight,\n\\[\n\\begin{equation}\nn_h = n \\cdot \\frac{W_h S_h}{\\sum W_h S_h}.\n(\\#eq:neyman-allocation)\n\\end{equation}\n\\]\nSuppose your costs vary by stratum, \\(c_h\\). The cost-constrained allocation starts with \\(C = c_0 + \\sum n_h c_h.\\) Minimizing the population sampling variance,\n\\[\n\\begin{equation}\nn_h = (C - c_0) \\frac{W_hS_h / \\sqrt{c_h}}{\\sum W_h S_h \\sqrt{c_h}}.\n(\\#eq:cost-allocation)\n\\end{equation}\n\\]\nThis method allocates more population to larger strata and strata with larger variances. The precision-constrained allocation is\n\\[\n\\begin{equation}\nn_h = (W_h S_h / \\sqrt{c_h}) \\frac{\\sum W_h S_h \\sqrt{c_h}}{V_0 + N^{-1} \\sum W_h S_h^2}.\n(\\#eq:precision-allocation)\n\\end{equation}\n\\]\nExample. Suppose you have a fixed budget of $100,000. If sampling costs are $1,000 person, survey \\(n = 100\\) people and allocate \\(n\\) to \\(n_h\\) with options i-iii). If sampling costs vary by stratum, use options iv-v).\n\n# Stratum per capita survey costs\nch &lt;- c(1400, 400, 300, 600, 450, 1000, 950, 250, 350, 650, 450, 950, 80, 70, 900, 80)\n\nsmho98 %&gt;%\n  group_by(STRATUM) %&gt;%\n  summarize(Nh = n(), Mh = mean(EXPTOTAL), Sh = sd(EXPTOTAL)) %&gt;%\n  bind_cols(\n    `i) prop` = ceiling(.$Nh / sum(.$Nh) * 100),\n    `ii) equal` = ceiling(1 / nrow(.) * 100),\n    `iii) neyman` = PracTools::strAlloc(n.tot = 100, Nh = .$Nh, Sh = .$Sh, \n                                        alloc = \"neyman\") %&gt;% pluck(\"nh\") %&gt;% ceiling(),\n    ch = ch,\n    `iv) cost` = PracTools::strAlloc(Nh = .$Nh, Sh = .$Sh, cost = 100000, ch = ch, \n                                     alloc = \"totcost\") %&gt;% pluck(\"nh\") %&gt;% \n      ceiling(),\n    `v) prec.` = PracTools::strAlloc(Nh = .$Nh, Sh = .$Sh, CV0 = .10, ch = ch, \n                                         ybarU = .$Mh, alloc = \"totvar\") %&gt;% \n      pluck(\"nh\") %&gt;% ceiling()\n  ) %&gt;%\n  select(-c(Mh, Sh)) %&gt;%\n  janitor::adorn_totals(\"row\", fill = NULL, na.rm = FALSE, name = \"Total\", Nh, \n                        `i) prop`, `ii) equal`, `iii) neyman`, `iv) cost`, `v) prec.`)\n##  STRATUM  Nh i) prop ii) equal iii) neyman   ch iv) cost v) prec.\n##        1 151      18         7          18 1400       19       12\n##        2  64       8         7          19  400       37        3\n##        3  43       5         7           4  300        9        7\n##        4  22       3         7           2  600        3        3\n##        5 150      18         7           8  450       14       25\n##        6  23       3         7           1 1000        1        2\n##        7  65       8         7           5  950        6        8\n##        8  14       2         7           1  250        1        2\n##        9  38       5         7           4  350        8        5\n##       10  12       2         7           1  650        1        2\n##       11  13       2         7           1  450        1        1\n##       12  77       9         7           5  950        6       10\n##       13  59       7         7           6   80       27       26\n##       14  86      10         7           5   70       22       20\n##       15  39       5         7          26  900       34        4\n##       16  19       3         7           2   80        7       12\n##    Total 875     108       112         108   NA      196      142",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Sample Size</span>"
    ]
  },
  {
    "objectID": "02-sample_size.html#power-analysis",
    "href": "02-sample_size.html#power-analysis",
    "title": "2  Sample Size",
    "section": "2.3 Power Analysis",
    "text": "2.3 Power Analysis\nSections @ref(srs) and @ref(stratified-srs) calculated sample sizes based on the desired precision of the population parameter using CV, MOE, and cost constraints. Another approach is to calculate the sample size required to detect the alternative value in a hypothesis test. Power is a measure of the likelihood of detecting some magnitude difference \\(\\delta\\) between \\(H_0\\) and \\(H_a\\).2 Power calculations are best suited for studies that estimate theoretical population values, not for studies that estimate group differences in a finite population (Valliant 2013).\nA measured \\(t = \\frac{\\hat{\\bar{y}} - \\mu_0}{\\sqrt{v(\\hat{\\bar{y}})}}\\) test statistic would vary with repeated measurements and have a \\(t\\) distribution. A complication about the degrees of freedom arises in survey analysis. It is usually defined using a rule of thumb: \\(df = n_{psu} - n_{strata}\\). So if you have 10 strata and 100 PSUs per stratum, \\(df\\) would equal 1,000 - 100 = 900.\nExample. Suppose you want to measure mean household income for married couples. From prior research, you expect the mean is $55,000 with 6% CV. You hypothesize \\(\\mu\\) is greater than $55,000, but only care if the difference is at least $5,000.\nThe 6% CV implies SE = 6% * $55,000 = $3,300. Supposing \\(\\sigma\\) = $74,000, the original research would have use a sample of size n = \\((\\$74,000 / \\$3,300)^2\\) = 503.\nDon’t use n = 503 for your sample though. The probability of measuring a sample mean &gt;= $60,000 with an acceptable p-value is the power of the study. For n = 503 the power is only 0.448. The area of 1 - \\(\\beta\\) in the top panel below is only pnorm(qnorm(.95, 50000, 3300), 55000, 3300, lower.tail = FALSE) = 0.448. To achieve a 1-\\(\\beta\\) = .80 power, you need n = 1,356. That’s what the bottom panel shows. Notice that a sample mean of $59,000 still rejects H0: \\(\\mu\\) = $55,000. The power of the test tells you the sample size you need to draw a sample mean large enough to reject H0 1-\\(\\beta\\) percent of the time.\n\n\n\n\n\n\n\n\n\nThe power of the test from the original study was only 0.448.\n\npower.t.test(\n  type = \"one.sample\",\n  n = 503, \n  delta = 5000, \n  sd = 74000, \n  sig.level = .05, \n  alternative = \"one.sided\"\n)\n\n\n     One-sample t test power calculation \n\n              n = 503\n          delta = 5000\n             sd = 74000\n      sig.level = 0.05\n          power = 0.4476846\n    alternative = one.sided\n\n\nWith such a low power of the study, a sample mean of $59,000 isn’t large enough to reject H0. Its p-value would be pt(q = (59000-55000)/(74000/sqrt(503)), df = 503 - 1, lower.tail = FALSE) = 0.113. To find the right sample size, use the power calculation with 1 - \\(\\beta\\) and n unspecified.\n\npower.t.test(\n  type = \"one.sample\",\n  delta = 5000, \n  sd = 74000,\n  sig.level = .05,\n  power = .80,\n  alternative = \"one.sided\"\n)\n\n\n     One-sample t test power calculation \n\n              n = 1355.581\n          delta = 5000\n             sd = 74000\n      sig.level = 0.05\n          power = 0.8\n    alternative = one.sided",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Sample Size</span>"
    ]
  },
  {
    "objectID": "02-sample_size.html#appendix-bias",
    "href": "02-sample_size.html#appendix-bias",
    "title": "2  Sample Size",
    "section": "2.4 Appendix: Bias",
    "text": "2.4 Appendix: Bias\nA consideration not explored here, but which should be on your mind is the risk of bias. Here are a few types of bias to beware of (Lau 2017).\n\nCoverage bias. The sampling frame is not representative of the population. E.g., school club members is a poor sampling frame if target population is high school students.\nSampling bias. The sample itself is not representative of the population. This occurs when response rates differ, or sub-population sizes differ. Explicitly define the target population and sampling frame, and use systematic sampling methods such as stratified sampling. Adjust analysis and interpretation for response rate differences.\nNon-response bias. Responded have different attributes than non-respondents. You can offer incentives to increase response rate, follow up with non-respondents to find out the reasons for their lack of response, or compare the characteristics of non-respondents with respondents or known external benchmarks for differences.\nMeasurement bias. Survey results differ from the population values. The major cause is deficient instrument design due to ambiguous items, unclear instructions, or poor usability. Reduce measurement bias with pretesting or pilot testing of the instrument, and formal tests for validity and reliability.\n\n\n\n\n\nLau, C. Kuziemesky, F. 2017. Handbook of eHealth Evaluation: An Evidence-Based Approach. Wiley. https://www.ncbi.nlm.nih.gov/books/NBK481602/.\n\n\nValliant, Jill A.; Kreuter, Richard; Dever. 2013. Practical Tools for Designing and Weighting Survey Samples. Springer. https://doi.org/10.1007/978-3-319-93632-1.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Sample Size</span>"
    ]
  },
  {
    "objectID": "02-sample_size.html#footnotes",
    "href": "02-sample_size.html#footnotes",
    "title": "2  Sample Size",
    "section": "",
    "text": "Cluster sampling, systematic sampling and Poisson sampling are other sampling methods to at least be aware of. I’m not ready to deal with these yet.↩︎\nSee statistics handbook section on frequentist statistics for discussion of Type I and II errors.↩︎",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Sample Size</span>"
    ]
  },
  {
    "objectID": "03-statistical_power.html",
    "href": "03-statistical_power.html",
    "title": "3  Statistical Power",
    "section": "",
    "text": "3.0.1 Case Study",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Statistical Power</span>"
    ]
  },
  {
    "objectID": "03-statistical_power.html#multi-stage",
    "href": "03-statistical_power.html#multi-stage",
    "title": "3  Statistical Power",
    "section": "3.1 Multi-Stage",
    "text": "3.1 Multi-Stage",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Statistical Power</span>"
    ]
  },
  {
    "objectID": "03-statistical_power.html#survey-weights",
    "href": "03-statistical_power.html#survey-weights",
    "title": "3  Statistical Power",
    "section": "3.2 Survey Weights",
    "text": "3.2 Survey Weights",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Statistical Power</span>"
    ]
  },
  {
    "objectID": "04-analysis.html",
    "href": "04-analysis.html",
    "title": "4  Analyzing Survey Data",
    "section": "",
    "text": "4.1 Defining the Survey Design\nBelow are some examples defining the most common survey designs. The survey package includes the Student performance in California schools data set (api), a record of the Academic Performance Index based on standardized testing. api contains sub-data sets that illustrate the design types.\nYou create a survey design object with the svydesign(data, ...) function. There are parameter settings for each design type.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Analyzing Survey Data</span>"
    ]
  },
  {
    "objectID": "04-analysis.html#defining-the-survey-design",
    "href": "04-analysis.html#defining-the-survey-design",
    "title": "4  Analyzing Survey Data",
    "section": "",
    "text": "apisrs is a simple random sample of (n = 200) schools,\napistrat is stratified sample of 3 school types (elementary, middle, high) with simple random sampling of different sizes in each stratum,\napiclus2 is a two-stage cluster sample of schools within districts.\n\n\n\n4.1.1 Simple Random Sample\nA simple random sample has no clusters, so indicate this with ids = ~1. The response weights will always be the same, equaling the population size divided by the sample size. Typically, the response weight is identified in a column. There is another parameter called the finite population correction (fpc) that is used to reduce the variance when a substantial fraction of the total population has been sampled. Set fpc to the stratum population size. A simple random sample has no strata, so it will always be the same, equaling the population size.\nFor apisrs the population size is 6,194 (the number of schools in California). The sample size is 200, so the response weights all equal 6,194 / 200 = 30.97.\n\nnrow(apisrs)\n## [1] 200\napisrs %&gt;% count(pw, fpc)\n##      pw  fpc   n\n## 1 30.97 6194 200\n\nHere is the design object.\n\napisrs_design &lt;- svydesign(\n  data = apisrs, \n  weights = ~pw, \n  fpc = ~fpc, \n  ids = ~1\n)\nsummary(apisrs_design)\n## Independent Sampling design\n## svydesign(data = apisrs, weights = ~pw, fpc = ~fpc, ids = ~1)\n## Probabilities:\n##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n## 0.03229 0.03229 0.03229 0.03229 0.03229 0.03229 \n## Population size (PSUs): 6194 \n## Data variables:\n##  [1] \"cds\"      \"stype\"    \"name\"     \"sname\"    \"snum\"     \"dname\"   \n##  [7] \"dnum\"     \"cname\"    \"cnum\"     \"flag\"     \"pcttest\"  \"api00\"   \n## [13] \"api99\"    \"target\"   \"growth\"   \"sch.wide\" \"comp.imp\" \"both\"    \n## [19] \"awards\"   \"meals\"    \"ell\"      \"yr.rnd\"   \"mobility\" \"acs.k3\"  \n## [25] \"acs.46\"   \"acs.core\" \"pct.resp\" \"not.hsg\"  \"hsg\"      \"some.col\"\n## [31] \"col.grad\" \"grad.sch\" \"avg.ed\"   \"full\"     \"emer\"     \"enroll\"  \n## [37] \"api.stu\"  \"pw\"       \"fpc\"\n\n\n\n4.1.2 Stratified Sample\nDefine a stratified sample by specifying with the strata parameter. The schools in apistrat are stratified based on the school type E = Elementary, M = Middle, and H = High School. For each school type, a simple random sample of schools was taken: \\(n_E\\) = 100, \\(n_M\\) = 50, and \\(n_H\\) = 50. The 100 elementary schools represent 100 / 4,421 of the state’s elementary schools, so their weights = 44.21. Similarly, the weights are 50 / 1,018 = 20.36 for the middle schools, and 50 / 755 = 15.10 for the high schools.\n\napistrat %&gt;% \n  count(stype, pw, fpc) %&gt;% \n  mutate(`pw*n` = pw * n) %&gt;%\n  adorn_totals(,,,, -pw) %&gt;% \n  flextable() %&gt;% colformat_num(j = 2, digits = 2) %&gt;% colformat_int(j = c(3:5))\n\nstypepwfpcnpw*nE44.20999908447274,4211004,421H15.100000381469775550755M20.36000061035161,018501,018Total-6,1942006,194\n\n\nHere is the design object.\n\napistrat_design &lt;- svydesign(\n  data = apistrat, \n  weights = ~pw, \n  fpc = ~fpc, \n  ids = ~1, \n  strata = ~stype\n)\nsummary(apistrat_design)\n\nStratified Independent Sampling design\nsvydesign(data = apistrat, weights = ~pw, fpc = ~fpc, ids = ~1, \n    strata = ~stype)\nProbabilities:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n0.02262 0.02262 0.03587 0.04014 0.05339 0.06623 \nStratum Sizes: \n             E  H  M\nobs        100 50 50\ndesign.PSU 100 50 50\nactual.PSU 100 50 50\nPopulation stratum sizes (PSUs): \n   E    H    M \n4421  755 1018 \nData variables:\n [1] \"cds\"      \"stype\"    \"name\"     \"sname\"    \"snum\"     \"dname\"   \n [7] \"dnum\"     \"cname\"    \"cnum\"     \"flag\"     \"pcttest\"  \"api00\"   \n[13] \"api99\"    \"target\"   \"growth\"   \"sch.wide\" \"comp.imp\" \"both\"    \n[19] \"awards\"   \"meals\"    \"ell\"      \"yr.rnd\"   \"mobility\" \"acs.k3\"  \n[25] \"acs.46\"   \"acs.core\" \"pct.resp\" \"not.hsg\"  \"hsg\"      \"some.col\"\n[31] \"col.grad\" \"grad.sch\" \"avg.ed\"   \"full\"     \"emer\"     \"enroll\"  \n[37] \"api.stu\"  \"pw\"       \"fpc\"     \n\n\n\n\n4.1.3 Clustered\nDefine a clustered sample by specifying the the cluster ids from largest to smallest level. The schools in apiclus2 are clustered in two stages, first by the (fpc1 = 757) school districts and a random sample of (n = 40) school districts (dnum) were selected. Then a random sample of (n &lt;= 5) schools (snum) were selected from the fpc2 schools in the selected school districts.\n\napiclus_design &lt;- svydesign(\n  id = ~dnum + snum, \n  data = apiclus2, \n  weights = ~pw, \n  fpc = ~fpc1 + fpc2\n)\nsummary(apiclus_design)\n\n2 - level Cluster Sampling design\nWith (40, 126) clusters.\nsvydesign(id = ~dnum + snum, data = apiclus2, weights = ~pw, \n    fpc = ~fpc1 + fpc2)\nProbabilities:\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n0.003669 0.037743 0.052840 0.042390 0.052840 0.052840 \nPopulation size (PSUs): 757 \nData variables:\n [1] \"cds\"      \"stype\"    \"name\"     \"sname\"    \"snum\"     \"dname\"   \n [7] \"dnum\"     \"cname\"    \"cnum\"     \"flag\"     \"pcttest\"  \"api00\"   \n[13] \"api99\"    \"target\"   \"growth\"   \"sch.wide\" \"comp.imp\" \"both\"    \n[19] \"awards\"   \"meals\"    \"ell\"      \"yr.rnd\"   \"mobility\" \"acs.k3\"  \n[25] \"acs.46\"   \"acs.core\" \"pct.resp\" \"not.hsg\"  \"hsg\"      \"some.col\"\n[31] \"col.grad\" \"grad.sch\" \"avg.ed\"   \"full\"     \"emer\"     \"enroll\"  \n[37] \"api.stu\"  \"pw\"       \"fpc1\"     \"fpc2\"    \n\n\n\n\n4.1.4 Example: NHANES\nLet’s create a complex survey design for the National Health and Nutrition Examination Survey (NHANES). The survey collected 78 attributes of (n = 20,293) persons.\n\ndata(NHANESraw, package = \"NHANES\")\nNHANESraw &lt;- NHANESraw %&gt;% \n  mutate(WTMEC4YR = WTMEC2YR / 2) # correction to weights\n\nThe survey used a 4-stage design: stage 0 stratified the US by geography and proportion of minority populations; stage 1 randomly selected counties within strata; stage 2 randomly seleted city blocks within counties; stage 3 randomly selected households within city blocks; and stage 4 randomly selected persons within households. When there are multiple levels of clusters like this, the convention is to assign the first cluster to ids. Set nest = TRUE because the cluster ids are nested within the strata (i.e., they are not unique).\n\nNHANES_design &lt;- svydesign(\n  data = NHANESraw, \n  strata = ~SDMVSTRA, \n  ids = ~SDMVPSU, \n  nest = TRUE, \n  weights = ~WTMEC4YR\n)\nsummary(NHANES_design)\n\nStratified 1 - level Cluster Sampling design (with replacement)\nWith (62) clusters.\nsvydesign(data = NHANESraw, strata = ~SDMVSTRA, ids = ~SDMVPSU, \n    nest = TRUE, weights = ~WTMEC4YR)\nProbabilities:\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n8.986e-06 5.664e-05 1.054e-04       Inf 1.721e-04       Inf \nStratum Sizes: \n            75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90  91\nobs        803 785 823 829 696 751 696 724 713 683 592 946 598 647 251 862 998\ndesign.PSU   2   2   2   2   2   2   2   2   2   2   2   3   2   2   2   3   3\nactual.PSU   2   2   2   2   2   2   2   2   2   2   2   3   2   2   2   3   3\n            92  93  94  95  96  97  98  99 100 101 102 103\nobs        875 602 688 722 676 608 708 682 700 715 624 296\ndesign.PSU   3   2   2   2   2   2   2   2   2   2   2   2\nactual.PSU   3   2   2   2   2   2   2   2   2   2   2   2\nData variables:\n [1] \"ID\"               \"SurveyYr\"         \"Gender\"           \"Age\"             \n [5] \"AgeMonths\"        \"Race1\"            \"Race3\"            \"Education\"       \n [9] \"MaritalStatus\"    \"HHIncome\"         \"HHIncomeMid\"      \"Poverty\"         \n[13] \"HomeRooms\"        \"HomeOwn\"          \"Work\"             \"Weight\"          \n[17] \"Length\"           \"HeadCirc\"         \"Height\"           \"BMI\"             \n[21] \"BMICatUnder20yrs\" \"BMI_WHO\"          \"Pulse\"            \"BPSysAve\"        \n[25] \"BPDiaAve\"         \"BPSys1\"           \"BPDia1\"           \"BPSys2\"          \n[29] \"BPDia2\"           \"BPSys3\"           \"BPDia3\"           \"Testosterone\"    \n[33] \"DirectChol\"       \"TotChol\"          \"UrineVol1\"        \"UrineFlow1\"      \n[37] \"UrineVol2\"        \"UrineFlow2\"       \"Diabetes\"         \"DiabetesAge\"     \n[41] \"HealthGen\"        \"DaysPhysHlthBad\"  \"DaysMentHlthBad\"  \"LittleInterest\"  \n[45] \"Depressed\"        \"nPregnancies\"     \"nBabies\"          \"Age1stBaby\"      \n[49] \"SleepHrsNight\"    \"SleepTrouble\"     \"PhysActive\"       \"PhysActiveDays\"  \n[53] \"TVHrsDay\"         \"CompHrsDay\"       \"TVHrsDayChild\"    \"CompHrsDayChild\" \n[57] \"Alcohol12PlusYr\"  \"AlcoholDay\"       \"AlcoholYear\"      \"SmokeNow\"        \n[61] \"Smoke100\"         \"SmokeAge\"         \"Marijuana\"        \"AgeFirstMarij\"   \n[65] \"RegularMarij\"     \"AgeRegMarij\"      \"HardDrugs\"        \"SexEver\"         \n[69] \"SexAge\"           \"SexNumPartnLife\"  \"SexNumPartYear\"   \"SameSex\"         \n[73] \"SexOrientation\"   \"WTINT2YR\"         \"WTMEC2YR\"         \"SDMVPSU\"         \n[77] \"SDMVSTRA\"         \"PregnantNow\"      \"WTMEC4YR\"        \n\n\nSurvey weights for minorities are typically lower to account for their large sample sizes relative to population representation. You can see how the weights sum to the sub-populations and the total population.\n\nNHANESraw %&gt;% \n  group_by(Race1) %&gt;% \n  summarize(.groups = \"drop\", \n            `Sum(WTMEC4YR)` = sum(WTMEC4YR), \n            `Avg(WTMEC4YR)` = mean(WTMEC4YR), \n            n = n()) %&gt;%\n  mutate(`Avg * n` = `Avg(WTMEC4YR)` * n) %&gt;%\n  janitor::adorn_totals(where = \"row\") %&gt;%\n  flextable::flextable() %&gt;%\n  flextable::colformat_int(j = c(2:5))\n\nRace1Sum(WTMEC4YR)Avg(WTMEC4YR)nAvg * nBlack37,241,6168,026.2104,64037,241,616Hispanic18,951,1508,579.0632,20918,951,150Mexican30,719,1588,215.8753,73930,719,158White193,966,27426,236.4777,393193,966,274Other23,389,00210,116.3502,31223,389,002Total304,267,20061,173.97620,293304,267,200\n\n\nThe survey package functions handle the survey designs and weights. The population figures from the table above could have been built with svytable().\n\nsvytable(~Race1, design = NHANES_design) %&gt;%\n  as.data.frame() %&gt;%\n  mutate(prop = Freq / sum(Freq) * 100) %&gt;%\n  arrange(desc(prop)) %&gt;%\n  adorn_totals() %&gt;%\n  flextable() %&gt;%\n  colformat_int(j = 2) %&gt;%\n  colformat_num(j = 3, suffix = \"%\", digits = 0)\n\nRace1FreqpropWhite193,966,27463.748664%Black37,241,61612.239773%Mexican30,719,15810.096112%Other23,389,0027.686994%Hispanic18,951,1506.228456%Total304,267,200100.000000%",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Analyzing Survey Data</span>"
    ]
  },
  {
    "objectID": "04-analysis.html#exploring-categorical-items",
    "href": "04-analysis.html#exploring-categorical-items",
    "title": "4  Analyzing Survey Data",
    "section": "4.2 Exploring Categorical Items",
    "text": "4.2 Exploring Categorical Items\nCreate a contingency table by including two variables in svytable(). Here is contingency table for self-reported health by depression expressed as a 100% stacked bar chart.\n\nsvytable(~Depressed + HealthGen, design = NHANES_design) %&gt;%\n  data.frame() %&gt;%\n  group_by(HealthGen) %&gt;%\n  mutate(n_HealthGen = sum(Freq), Prop_Depressed = Freq / sum(Freq)) %&gt;%\n  ggplot(aes(x = HealthGen, y = Prop_Depressed, fill = Depressed)) +\n  geom_col() + \n  coord_flip() +\n  theme_minimal() +\n  scale_fill_brewer()\n\n\n\n\n\n\n\n\nPerform a chi-square test of independence on contingency tables using the svychisq() function. Here is a test ofthe null hypothesis that depression is independent of general health.\n\nsvychisq(~Depressed + HealthGen, design = NHANES_design, statistic = \"Chisq\")\n\n\n    Pearson's X^2: Rao & Scott adjustment\n\ndata:  svychisq(~Depressed + HealthGen, design = NHANES_design, statistic = \"Chisq\")\nX-squared = 1592.7, df = 8, p-value &lt; 2.2e-16\n\n\nThe chi-square test with Rao & Scott adjustment is evidently not a standard chi-square test. Maybe in how it factors in survey design? The test statistic is usually \\(X^2 = \\sum (O - E)^2 / E.\\)\n\nO &lt;- svytable(~Depressed + HealthGen, design = NHANES_design) %&gt;% as.matrix()\nE &lt;- sum(O) * prop.table(O, 1) * prop.table(O, 2)\n(X2 &lt;- sum((O - E)^2 / E))\n## [1] 16025254\npchisq(X2, df = (nrow(O)-1) * (ncol(O) - 1), lower.tail = FALSE)\n## [1] 0\n\nwhich is what chisq.test() does.\n\nsvytable(~Depressed + HealthGen, design = NHANES_design) %&gt;% \n  as.matrix() %&gt;% \n  chisq.test()\n\n\n    Pearson's Chi-squared test\n\ndata:  .\nX-squared = 16025254, df = 8, p-value &lt; 2.2e-16",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Analyzing Survey Data</span>"
    ]
  },
  {
    "objectID": "04-analysis.html#exploring-quantitative-data",
    "href": "04-analysis.html#exploring-quantitative-data",
    "title": "4  Analyzing Survey Data",
    "section": "4.3 Exploring Quantitative Data",
    "text": "4.3 Exploring Quantitative Data\nThe svymean(), svytotal(), and svyquantile() functions summarize quantitative variables. To group by a factor variable, use svyby().\n\nsvyquantile(x = ~SleepHrsNight, \n            design = NHANES_design, \n            na.rm = TRUE, \n            quantiles = c(.01, .25, .50, .75, .99))\n\n$SleepHrsNight\n     quantile ci.2.5 ci.97.5        se\n0.01        4      4       5 0.2457588\n0.25        6      6       7 0.2457588\n0.5         7      7       8 0.2457588\n0.75        8      8       9 0.2457588\n0.99       10     10      11 0.2457588\n\nattr(,\"hasci\")\n[1] TRUE\nattr(,\"class\")\n[1] \"newsvyquantile\"\n\nsvymean(x = ~SleepHrsNight, design = NHANES_design, na.rm = TRUE)\n\n                mean     SE\nSleepHrsNight 6.9292 0.0166\n\n\n\nsvyby(formula = ~SleepHrsNight, by = ~Depressed, FUN = svymean, \n      design = NHANES_design, na.rm = TRUE, keep.names = FALSE) %&gt;%\n  ggplot(aes(x = Depressed, y = SleepHrsNight, \n             ymin = SleepHrsNight - 2*se, ymax = SleepHrsNight + 2*se)) +\n  geom_col(fill = \"lightblue\") +\n  geom_errorbar(width = 0.5)\n\n\n\n\n\n\n\n\nYou need raw data for the distribution plots, so be sure to weight the variables.\n\nNHANESraw %&gt;% \n  ggplot(aes(x = SleepHrsNight, weight = WTMEC4YR)) + \n  geom_histogram(binwidth = 1, fill = \"lightblue\", color = \"#FFFFFF\", na.rm = TRUE)\n\n\n\n\n\n\n\nNHANESraw %&gt;% \n  filter(!is.na(SleepHrsNight) & !is.na(Gender)) %&gt;%\n  group_by(Gender) %&gt;%\n  mutate(WTMEC4YR_std = WTMEC4YR / sum(WTMEC4YR)) %&gt;%\n  ggplot(aes(x = SleepHrsNight, Weight = WTMEC4YR_std)) +\n  geom_density(bw = 0.6, fill = \"lightblue\") +\n  labs(x = \"Sleep Hours per Night\") +\n  facet_wrap(~Gender, labeller = \"label_both\")\n\nWarning: The following aesthetics were dropped during statistical transformation:\nWeight.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\nThe following aesthetics were dropped during statistical transformation:\nWeight.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n\n\n\n\n\n\n\n\n\nTest whether the population averages differ with a two-sample survey-weighted t-test. Use the svytest() function to incorporate the survey design.\n\nsvyttest(formula = SleepHrsNight ~ Gender, design = NHANES_design)\n\nWarning in summary.glm(g): observations with zero weight not used for\ncalculating dispersion\n\n\nWarning in summary.glm(glm.object): observations with zero weight not used for\ncalculating dispersion\n\n\n\n    Design-based t-test\n\ndata:  SleepHrsNight ~ Gender\nt = -3.4077, df = 32, p-value = 0.001785\nalternative hypothesis: true difference in mean is not equal to 0\n95 percent confidence interval:\n -0.15506427 -0.03904047\nsample estimates:\ndifference in mean \n       -0.09705237",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Analyzing Survey Data</span>"
    ]
  },
  {
    "objectID": "04-analysis.html#modeling-quantitative-data",
    "href": "04-analysis.html#modeling-quantitative-data",
    "title": "4  Analyzing Survey Data",
    "section": "4.4 Modeling Quantitative Data",
    "text": "4.4 Modeling Quantitative Data\nScatterplots need to adjust for the sampling weights. You can do this with the size or alpha aesthetics.\n\np1 &lt;- NHANESraw %&gt;% \n  filter(Age == 20) %&gt;%\n  ggplot(aes(x = Height, y = Weight, color = Gender, size = WTMEC4YR)) +\n  geom_jitter(width = 0.3, height = 0, alpha = 0.3) +\n  guides(size = FALSE) +\n  theme(legend.position = \"top\") +\n  labs(color = \"\")\n\nWarning: The `&lt;scale&gt;` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\nof ggplot2 3.3.4.\n\np2 &lt;- NHANESraw %&gt;% \n  filter(Age == 20) %&gt;%\n  ggplot(aes(x = Height, y = Weight, color = Gender, alpha = WTMEC4YR)) +\n  geom_jitter(width = 0.3, height = 0) +\n  guides(alpha = FALSE) +\n  theme(legend.position = \"top\") +\n  labs(color = \"\")\n\ngridExtra::grid.arrange(p1, p2, nrow = 1)\n\nWarning: Removed 4 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\nWarning: Removed 4 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\nFit a regression line with geom_smooth().\n\nNHANESraw %&gt;% \n  filter(!is.na(Weight) & !is.na(Height)) %&gt;%\n  ggplot(aes(x = Height, y = Weight, size = WTMEC4YR)) +\n  geom_point(alpha = 0.1) +\n  geom_smooth(method = \"lm\", se = FALSE, mapping = aes(weight = WTMEC4YR), \n              formula = y ~ x, color = \"blue\") +\n  geom_smooth(method = \"lm\", se = FALSE, mapping = aes(weight = WTMEC4YR), \n              formula = y ~ poly(x, 2), color = \"orange\") +\n  geom_smooth(method = \"lm\", se = FALSE, mapping = aes(weight = WTMEC4YR), \n              formula = y ~ poly(x, 3), color = \"red\") +\nguides(size = FALSE) \n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nWarning: The following aesthetics were dropped during statistical transformation: size.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\nThe following aesthetics were dropped during statistical transformation: size.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\nThe following aesthetics were dropped during statistical transformation: size.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n\n\n\n\n\n\n\n\n\nModel a regression line with svyglm(). Let’s build a model to predict, BPSysAve, a person’s systolic blood pressure reading, using BPDiaAve, a person’s diastolic blood pressure reading and Diabetes, whether or not they were diagnosed with diabetes.\n\ndrop_na(NHANESraw, Diabetes, BPDiaAve, BPSysAve) %&gt;%\nggplot(mapping = aes(x = BPDiaAve, y = BPSysAve, size = WTMEC4YR, color = Diabetes)) + \n    geom_point(alpha = 0.2) + \n    guides(size = FALSE) + \n    geom_smooth(method = \"lm\", formula = y ~ x, se = FALSE, mapping = aes(weight = WTMEC4YR))\n\nWarning: The following aesthetics were dropped during statistical transformation: size.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n\n\n\n\n\n\n\n\nmod &lt;- svyglm(BPSysAve ~ BPDiaAve*Diabetes, design = NHANES_design)\nsummary(mod)\n\n\nCall:\nsvyglm(formula = BPSysAve ~ BPDiaAve * Diabetes, design = NHANES_design)\n\nSurvey design:\nsvydesign(data = NHANESraw, strata = ~SDMVSTRA, ids = ~SDMVPSU, \n    nest = TRUE, weights = ~WTMEC4YR)\n\nCoefficients:\n                     Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)          83.58652    2.05537  40.667  &lt; 2e-16 ***\nBPDiaAve              0.49964    0.02623  19.047  &lt; 2e-16 ***\nDiabetesYes          25.36616    3.56587   7.114 6.53e-08 ***\nBPDiaAve:DiabetesYes -0.22132    0.05120  -4.323 0.000156 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for gaussian family taken to be 279.1637)\n\nNumber of Fisher Scoring iterations: 2",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Analyzing Survey Data</span>"
    ]
  },
  {
    "objectID": "04-analysis.html#surveyadministration",
    "href": "04-analysis.html#surveyadministration",
    "title": "4  Analyzing Survey Data",
    "section": "4.5 Survey Administration",
    "text": "4.5 Survey Administration\n\n4.5.1 Instrument: Validity and Reliability\n\n\n4.5.2 Data Collection\nThe second phase of a survey analysis is to collect the responses and perform an exploratory data analysis to familiarize yourself with the data.\n\n\n4.5.3 Frequencies\nbrand_rep is a brand reputation survey of n = 599 respondents answering nine 5-point Likert-scale items. The responses come in as numeric, and you will want to leave them that way for most analyses.\n\nbrand_rep &lt;- read_csv(url(\"https://assets.datacamp.com/production/repositories/4494/datasets/59b5f2d717ddd647415d8c88aa40af6f89ed24df/brandrep-cleansurvey-extraitem.csv\"))\n\npsych::response.frequencies(brand_rep)\n\n                       1         2          3           4          5 miss\nwell_made      0.6493739 0.2665474 0.04830054 0.014311270 0.02146691    0\nconsistent     0.6779964 0.2343470 0.04651163 0.019677996 0.02146691    0\npoor_workman_r 0.7584973 0.1699463 0.04472272 0.007155635 0.01967800    0\nhigher_price   0.3130590 0.2593918 0.18425760 0.119856887 0.12343470    0\nlot_more       0.1484794 0.1735242 0.15563506 0.162790698 0.35957066    0\ngo_up          0.1842576 0.1824687 0.19677996 0.177101968 0.25939177    0\nstands_out     0.4275492 0.3041145 0.13953488 0.067978533 0.06082290    0\nunique         0.4579606 0.2933810 0.11985689 0.069767442 0.05903399    0\none_of_a_kind  0.6225403 0.1949911 0.08944544 0.023255814 0.06976744    0\n\n\nSummarize Likert response with the likert::likert() function. This is the one place where you will need the items to be treated as factors.\n\nbrand_rep %&gt;%\n  data.frame() %&gt;% # read_csv() returns a tibble\n  mutate(across(everything(), as.factor)) %&gt;%  # likert() uses factors\n  likert::likert() %&gt;%\n  plot() + \n  labs(title = \"Brand Reputation Survey\") +\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\nMissing values may mean respondents did not understand the question or did not want to reveal their answer. If &lt;5% of survey responses have no missing values, you can just drop those responses. If missing values are a problem, try the Hmisc::naclus() to see which items tend to be missing in the same record. This survey is clean.\n\nnrow(brand_rep) - nrow(na.omit(brand_rep)) # num cases\n## [1] 0\ncolSums(is.na(brand_rep)) # num cases by col\n##      well_made     consistent poor_workman_r   higher_price       lot_more \n##              0              0              0              0              0 \n##          go_up     stands_out         unique  one_of_a_kind \n##              0              0              0              0\n\n\n\n4.5.4 Correlations\nYou will want to identify items that correlate highly with each other, but not highly outside their group. These patterns are the basis of mapping factors to the latent variables. Factors are the concrete survey items; latent variables are the abstract concepts they are intended to supply, like brand loyalty or customer satisfaction. The correlation plot below appears to have 3 groups, plus a stand-alone variable (one_of_a_kind).\n\n#psych::corr.test(brand_rep)\ncorrplot::corrplot(cor(brand_rep), method = \"circle\")",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Analyzing Survey Data</span>"
    ]
  },
  {
    "objectID": "04-analysis.html#itemreduction",
    "href": "04-analysis.html#itemreduction",
    "title": "4  Analyzing Survey Data",
    "section": "4.6 Item Reduction",
    "text": "4.6 Item Reduction\nThe third phase, explores the mapping of the factors (aka “manifest variables”) to the latent variable’s “dimensions” and refines the survey to exclude factors that do not map to a dimension. A latent variable may have several dimensions. E.g., “brand loyalty” may consist of “brand identification”, “perceived value”, and “brand trust”. Exploratory factor analysis (EFA), identifies the dimensions in the data, and whether any items do not reveal information about the latent variable. EFA establishes the internal reliability, whether similar items produce similar scores.\nStart with a parallel analysis and scree plot. This will suggest the number of factors in the data. Use this number as the input to an exploratory factor analysis.\n\n4.6.1 Parallel Analysis\nA scree plot is a line plot of the eigenvalues. An eigenvalue is the proportion of variance explained by each factor. Only factors with eigenvalues greater than those from uncorrelated data are useful. You want to find a sharp reduction in the size of the eigenvalues (like a cliff), with the rest of the smaller eigenvalues constituting rubble (scree!). After the eigenvalues drop dramatically in size, additional factors add relatively little to the information already extracted.\nParallel analysis helps to make the interpretation of scree plots more objective. The eigenvalues are plotted along with eigenvalues of simulated variables with population correlations of 0. The number of eigenvalues above the point where the two lines intersect is the suggested number of factors. The rationale for parallel analysis is that useful factors account for more variance than could be expected by chance.\npsych::fa.parallel() compares a scree of your data set to a random data set to identify the number of factors. The elbow below here is at 3 factors.\n\npsych::fa.parallel(brand_rep)\n\n\n\n\n\n\n\n\nParallel analysis suggests that the number of factors =  3  and the number of components =  2 \n\n\n\n\n4.6.2 Exporatory Factor Analysis\nUse psych::fa() to perform the factor analysis with your chosen number of factors. The number of factors may be the result of your parallel analysis, or the opinion of the SMEs. In this case, we’ll go with the 3 factors identified by the parallel analysis.\n\nbrand_rep_efa &lt;- psych::fa(brand_rep, nfactors = 3)\n\nLoading required namespace: GPArotation\n\n# psych::scree(brand_rep) # psych makes scree plot's too.\npsych::fa.diagram(brand_rep_efa)\n\n\n\n\n\n\n\n\nUsing EFA, you may tweak the number of factors or drop poorly-loading items. Each item should load highly to one and only one dimension. This one dimension is the item’s primary loading. Generally, a primary loading &gt; .7 is excellent, &gt;.6 is very good, &gt;.5 is good, &gt;.4 is fair, and &lt;.4 is poor. Here are the factor loadings from the 3 factor model.\n\nbrand_rep_efa$loadings\n\n\nLoadings:\n               MR2    MR1    MR3   \nwell_made       0.896              \nconsistent      0.947              \npoor_workman_r  0.739              \nhigher_price    0.127  0.632  0.149\nlot_more               0.850       \ngo_up                  0.896       \nstands_out                    1.008\nunique                        0.896\none_of_a_kind   0.309  0.295  0.115\n\n                 MR2   MR1   MR3\nSS loadings    2.361 2.012 1.858\nProportion Var 0.262 0.224 0.206\nCumulative Var 0.262 0.486 0.692\n\n\nThe brand-rep survey items load to 3 factors well except for the one_of_a_kind item. Its primary factor loading (0.309) is poor. The others are either very good (.6-.7) and excellent (&gt;.7) range.\nLook at the model eigenvalues. There should be one eigenvalue per dimension. Eigenvalues a little less than one may be contaminating the model.\n\nbrand_rep_efa$e.value\n\n[1] 4.35629549 1.75381015 0.98701607 0.67377072 0.39901205 0.35865598 0.23915591\n[8] 0.14238807 0.08989556\n\n\nLook at the factor score correlations. They should all be around 0.6. Much smaller means they are not describing the same latent variable. Much larger means they are describing the same dimension of the latent variable.\n\nbrand_rep_efa$r.scores\n\n          [,1]      [,2]      [,3]\n[1,] 1.0000000 0.3147485 0.4778759\n[2,] 0.3147485 1.0000000 0.5428218\n[3,] 0.4778759 0.5428218 1.0000000\n\n\nIf you have a poorly loaded dimension, drop factors one at a time from the scale. one_of_a_kind loads across all three factors, but does not load strongly onto any one factor. one_of_a_kind is not clearly measuring any dimension of the latent variable. Drop it and try again.\n\nbrand_rep_efa &lt;- psych::fa(brand_rep %&gt;% select(-one_of_a_kind), nfactors = 3)\nbrand_rep_efa$loadings\n\n\nLoadings:\n               MR2    MR3    MR1   \nwell_made       0.887              \nconsistent      0.958              \npoor_workman_r  0.735              \nhigher_price    0.120  0.596  0.170\nlot_more               0.845       \ngo_up                  0.918       \nstands_out                    0.990\nunique                        0.916\n\n                 MR2   MR3   MR1\nSS loadings    2.261 1.915 1.850\nProportion Var 0.283 0.239 0.231\nCumulative Var 0.283 0.522 0.753\n\nbrand_rep_efa$e.value\n\n[1] 4.00884429 1.75380537 0.97785883 0.42232527 0.36214534 0.24086772 0.14404264\n[8] 0.09011054\n\nbrand_rep_efa$r.scores\n\n          [,1]      [,2]      [,3]\n[1,] 1.0000000 0.2978009 0.4802138\n[2,] 0.2978009 1.0000000 0.5351654\n[3,] 0.4802138 0.5351654 1.0000000\n\n\nThis is better. We have three dimensions of brand reputation:\n\nitems well_made, consistent, and poor_workman_r describe Product Quality,\nitems higher_price, lot_more, and go_up describe Willingness to Pay, and\nitems stands_out and unique describe Product Differentiation\n\nEven if the data and your theory suggest otherwise, explore what happens when you include more or fewer factors in your EFA.\n\npsych::fa(brand_rep, nfactors = 2)$loadings\n\n\nLoadings:\n               MR1    MR2   \nwell_made              0.884\nconsistent             0.932\npoor_workman_r         0.728\nhigher_price    0.745       \nlot_more        0.784 -0.131\ngo_up           0.855 -0.103\nstands_out      0.591  0.286\nunique          0.540  0.307\none_of_a_kind   0.378  0.305\n\n                 MR1   MR2\nSS loadings    2.688 2.485\nProportion Var 0.299 0.276\nCumulative Var 0.299 0.575\n\npsych::fa(brand_rep, nfactors = 4)$loadings\n\n\nLoadings:\n               MR2    MR1    MR3    MR4   \nwell_made       0.879                     \nconsistent      0.964                     \npoor_workman_r  0.732                     \nhigher_price           0.552  0.150  0.168\nlot_more               0.835              \ngo_up                  0.929              \nstands_out                    0.976       \nunique                        0.932       \none_of_a_kind                        0.999\n\n                 MR2   MR1   MR3   MR4\nSS loadings    2.244 1.866 1.846 1.029\nProportion Var 0.249 0.207 0.205 0.114\nCumulative Var 0.249 0.457 0.662 0.776\n\n\nThe two-factor loading worked okay. The 4 factor loading only loaded one variable to the fourth factor. In this example the SME expected a three-factor model and the data did not contradict the theory, so stick with three.\nWhereas the item generation phase tested for item equivalence, the EFA phase tests for internal reliability (consistency) of items. Internal reliability means the survey produces consistent results. The more common statistics for assessing internal reliability are Cronbach’s Alpha, and split-half.\n\n\n4.6.3 Cronbach’s Alpha\nIn general, an alpha &lt;.6 is unacceptable, &lt;.65 is undesirable, &lt;.7 is minimally acceptable, &lt;.8 is respectable, &lt;.9 is very good, and &gt;=.9 suggests items are too alike. A very low alpha means items may not be measuring the same construct, so you should drop items. A very high alpha means items are multicollinear, and you should drop items. Here is Cronbach’s alpha for the brand reputation survey, after removing the poorly-loading one_of_a_kind variable.\n\npsych::alpha(brand_rep[, 1:8])$total$std.alpha\n\n[1] 0.8557356\n\n\nThis value is in the “very good” range. Cronbach’s alpha is often used to measure the reliability of a single dimension. Here are the values for the 3 dimensions.\n\npsych::alpha(brand_rep[, 1:3])$total$std # Product Quality\n## [1] 0.8918025\npsych::alpha(brand_rep[, 4:6])$total$std # Willingness to Pay\n## [1] 0.8517566\npsych::alpha(brand_rep[, 7:8])$total$std # Product Differentiation\n## [1] 0.951472\n\nAlpha is &gt;0.7 for each dimension. Sometimes the alpha for our survey as a whole is greater than that of the dimensions. This can happen because Cronbach’s alpha is sensitive to the number of items. Over-inflation of the alpha statistic can be a concern when working with surveys containing a large number of items.\n\n\n4.6.4 Split-Half\nUse psych::splitHalf() to split the survey in half and test whether all parts of the survey contribute equally to measurement. This method is much less popular than Cronbach’s alpha.\n\npsych::splitHalf(brand_rep[, 1:8])\n\nSplit half reliabilities  \nCall: psych::splitHalf(r = brand_rep[, 1:8])\n\nMaximum split half reliability (lambda 4) =  0.93\nGuttman lambda 6                          =  0.92\nAverage split half reliability            =  0.86\nGuttman lambda 3 (alpha)                  =  0.86\nGuttman lambda 2                          =  0.87\nMinimum split half reliability  (beta)    =  0.66\nAverage interitem r =  0.43  with median =  0.4",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Analyzing Survey Data</span>"
    ]
  },
  {
    "objectID": "04-analysis.html#confirmatoryfactoranalysis",
    "href": "04-analysis.html#confirmatoryfactoranalysis",
    "title": "4  Analyzing Survey Data",
    "section": "4.7 Confirmatory Factor Analysis",
    "text": "4.7 Confirmatory Factor Analysis\nWhereas EFA is used to develop a theory of the number of factors needed to explain the relationships among the survey items, confirmatory factor analysis (CFA) is a formal hypothesis test of the EFA theory. CFA measures construct validity, that is, whether you are really measuring what you claim to measure.\nThese notes explain how to use CFA, but do not explain the theory. For that you need to learn about dimensionality reduction, and structural equation modeling.\nUse the lavaan package (latent variable analysis package), passing in the model definition. Here is the model for the three dimensions in the brand reputation survey. Lavaan’s default estimator is maximum likelihood, which assumes normality. You can change it to MLR which uses robust standard errors to mitigate non-normality. The summary prints a ton of output. Concentrate on the lambda - the factor loadings.\n\nbrand_rep_mdl &lt;- paste(\n  \"PrdQl =~ well_made + consistent + poor_workman_r\",\n  \"WillPay =~ higher_price + lot_more + go_up\",\n  \"PrdDff =~ stands_out + unique\", \n  sep = \"\\n\"\n)\nbrand_rep_cfa &lt;- lavaan::cfa(model = brand_rep_mdl, data = brand_rep[, 1:8], estimator = \"MLR\")\n# lavaan::summary(brand_rep_cfa, fit.measures = TRUE, standardized = TRUE)\nsemPlot::semPaths(brand_rep_cfa, rotation = 4)\n\nRegistered S3 method overwritten by 'kutils':\n  method       from  \n  print.likert likert\n\n\n\n\n\n\n\n\nlavaan::inspect(brand_rep_cfa, \"std\")$lambda\n\n               PrdQl WillPy PrdDff\nwell_made      0.914  0.000  0.000\nconsistent     0.932  0.000  0.000\npoor_workman_r 0.730  0.000  0.000\nhigher_price   0.000  0.733  0.000\nlot_more       0.000  0.812  0.000\ngo_up          0.000  0.902  0.000\nstands_out     0.000  0.000  0.976\nunique         0.000  0.000  0.930\n\n\nThe CFA hypothesis test is a chi-square test, so is sensitive to normality assumptions and n-size. Other fit measure are reported too: * Comparative Fit Index (CFI) (look for value &gt;.9) * Tucker-Lewis Index (TLI) (look for value &gt;.9) * Root mean squared Error of Approximation (RMSEA) (look for value &lt;.05)\nThere are actually 78 fit measures to choose from! Focus on CFI and TLI.\n\nlavaan::fitMeasures(brand_rep_cfa, fit.measures = c(\"cfi\", \"tli\"))\n\n  cfi   tli \n0.980 0.967 \n\n\nThis output indicates a good model because both measures are &gt;.9. Check the standardized estimates for each item. The standardized factor loadings are the basis of establishing construct validity. While we call these measures ‘loadings,’ they are better described as correlations of each manifest item with the dimensions. As you calculated, the difference between a perfect correlation and the observed is considered ‘error.’ This relationship between the so-called ‘true’ and ‘observed’ scores is the basis of classical test theory.\n\nlavaan::standardizedSolution(brand_rep_cfa) %&gt;%\n  filter(op == \"=~\") %&gt;%\n  select(lhs, rhs, est.std, pvalue)\n\n      lhs            rhs est.std pvalue\n1   PrdQl      well_made   0.914      0\n2   PrdQl     consistent   0.932      0\n3   PrdQl poor_workman_r   0.730      0\n4 WillPay   higher_price   0.733      0\n5 WillPay       lot_more   0.812      0\n6 WillPay          go_up   0.902      0\n7  PrdDff     stands_out   0.976      0\n8  PrdDff         unique   0.930      0\n\n\nIf you have a survey that meets your assumptions, performs well under EFA, but fails under CFA, return to your survey and revisit your scale, examine the CFA modification indices, factor variances, etc.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Analyzing Survey Data</span>"
    ]
  },
  {
    "objectID": "04-analysis.html#convergentvalidity",
    "href": "04-analysis.html#convergentvalidity",
    "title": "4  Analyzing Survey Data",
    "section": "4.8 Convergent/Discriminant Validity",
    "text": "4.8 Convergent/Discriminant Validity\nConstruct validity means the survey measures what it intends to measure. It is composed of convergent validity and discriminant validity. Convergent validity means factors address the same concept. Discriminant validity means factors address different aspects of the concept.\nTest for construct validity after assessing CFA model strength (with CFI, TFI, and RMSEA) – a poor-fitting model may have greater construct validity than a better-fitting model. Use the semTools::reliability() function. The average variance extracted (AVE) measures convergent validity (avevar) and should be &gt; .5. The composite reliability (CR) measures discriminant validity (omega) and should be &gt; .7.\n\nsemTools::reliability(brand_rep_cfa)\n\n           PrdQl   WillPay    PrdDff\nalpha  0.8926349 0.8521873 0.9514719\nomega  0.9017514 0.8605751 0.9520117\nomega2 0.9017514 0.8605751 0.9520117\nomega3 0.9019287 0.8646975 0.9520114\navevar 0.7573092 0.6756174 0.9084654\n\n\nThese values look good for all three dimensions. As an aside, alpha is Cronbach’s alpha. Do not be tempted to test reliability and validity in the same step. Start with reliability because it is a necessary but insufficient condition for validity. By checking for internal consistency first, as measured by alpha, then construct validity, as measured by AVE and CR, you establish the necessary reliability of the scale as a whole was met, then took it to the next level by checking for construct validity among the unique dimensions.\nAt this point you have established that the latent and manifest variables are related as hypothesized, and that the survey measures what you intended to measure, in this case, brand reputation.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Analyzing Survey Data</span>"
    ]
  },
  {
    "objectID": "04-analysis.html#replication",
    "href": "04-analysis.html#replication",
    "title": "4  Analyzing Survey Data",
    "section": "4.9 Replication",
    "text": "4.9 Replication\nThe replication phase establishes criterion validity and stability (reliability). Criterion validity is a measure of the relationship between the construct and some external measure of interest. Measure criterion validity with concurrent validity, how well items correlate with an external metric measured at the same time, and with predictive validity, how well an item predicts an external metric. Stability means the survey produces similar results over repeated test-retest administrations.\n\n4.9.1 Criterion Validity\n\n4.9.1.1 Concurrent Validity\nConcurrent validity is a measure of whether our latent construct is significantly correlated to some outcome measured at the same time.\nSuppose you have an additional data set of consumer spending on the brand. The consumer’s perception of the brand should correlate with their spending. Before checking for concurrent validity, standardize the data so that likert and other variable types are on the same scale.\n\nset.seed(20201004)\nbrand_rep &lt;- brand_rep %&gt;%\n  mutate(spend = ((well_made + consistent + poor_workman_r)/3 * 5 +\n                  (higher_price + lot_more + go_up)/3 * 3 +\n                  (stands_out + unique)/2 * 2) / 10)\nbrand_rep$spend &lt;- brand_rep$spend + rnorm(559, 5, 4) # add randomness\nbrand_rep_scaled &lt;- scale(brand_rep)\n\nDo respondents with higher scores on our the brand reputation scale also tend to spend more at the store? Build model, and latentize spend as Spndng and model with the ~~ operator. Fit the model with the semTools::sem() function.\n\nbrand_rep_cv_mdl &lt;- paste(\n  \"PrdQl =~ well_made + consistent + poor_workman_r\",\n  \"WillPay =~ higher_price + lot_more + go_up\",\n  \"PrdDff =~ stands_out + unique\",\n  \"Spndng =~ spend\",\n  \"Spndng ~~ PrdQl + WillPay + PrdDff\",\n  sep = \"\\n\"\n)\nbrand_rep_cv &lt;- lavaan::sem(data = brand_rep_scaled, model = brand_rep_cv_mdl)\n\nHere are the standardized covariances. Because the data is standardized, interpret these as correlations. The p-vales are not significant because the spending data was random.\n\nlavaan::standardizedSolution(brand_rep_cv) %&gt;% \n  filter(rhs == \"Spndng\") %&gt;%\n  select(-op, -rhs)\n\n      lhs est.std    se     z pvalue ci.lower ci.upper\n1   PrdQl   0.174 0.043 4.092      0    0.091    0.258\n2 WillPay   0.241 0.043 5.654      0    0.157    0.324\n3  PrdDff   0.198 0.041 4.779      0    0.117    0.279\n4  Spndng   1.000 0.000    NA     NA    1.000    1.000\n\nsemPlot::semPaths(brand_rep_cv, whatLabels = \"est.std\", edge.label.cex = .8, rotation = 2)\n\n\n\n\n\n\n\n\nEach dimension of brand reputation is positively correlated to spending history and the relationships are all significant.\n\n\n4.9.1.2 Predictive Validity\nPredictive validity is established by regressing some future outcome on your established construct. Assess predictive validity just as you would with any linear regression – regression estimates and p-values (starndardizedSolution()), and the r-squared coefficient of determination inspect().\nBuild a regression model with the single ~ operator. Then fit the model to the data as before.\n\nbrand_rep_pv_mdl &lt;- paste(\n  \"PrdQl =~ well_made + consistent + poor_workman_r\",\n  \"WillPay =~ higher_price + lot_more + go_up\",\n  \"PrdDff =~ stands_out + unique\",\n  \"spend ~ PrdQl + WillPay + PrdDff\",\n  sep = \"\\n\"\n)\nbrand_rep_pv &lt;- lavaan::sem(data = brand_rep_scaled, model = brand_rep_pv_mdl)\n#lavaan::summary(brand_rep_pv, standardized = T, fit.measures = T, rsquare = T)\nsemPlot::semPaths(brand_rep_pv, whatLabels = \"est.std\", edge.label.cex = .8, rotation = 2)\n\n\n\n\n\n\n\nlavaan::standardizedSolution(brand_rep_pv) %&gt;% \n  filter(op == \"~\") %&gt;%\n  mutate_if(is.numeric, round, digits = 3)\n\n    lhs op     rhs est.std    se     z pvalue ci.lower ci.upper\n1 spend  ~   PrdQl   0.094 0.048 1.949  0.051   -0.001    0.189\n2 spend  ~ WillPay   0.182 0.052 3.486  0.000    0.080    0.284\n3 spend  ~  PrdDff   0.060 0.055 1.092  0.275   -0.047    0.167\n\nlavaan::inspect(brand_rep_pv, \"r2\")\n\n     well_made     consistent poor_workman_r   higher_price       lot_more \n         0.837          0.867          0.533          0.537          0.658 \n         go_up     stands_out         unique          spend \n         0.816          0.951          0.866          0.072 \n\n\nThere is a statistically significant relationship between one dimension of brand quality (Willingness to Pay) and spending. At this point you may want to drop the other two dimensions. However, the R^2 is not good - only 7% of the variability in Spending can be explained by the three dimension of our construct.\nFactor scores represent individual respondents’ standing on a latent factor. While not used for scale validation per se, factor scores can be used for customer segmentation via clustering, network analysis and other statistical techniques.\n\nbrand_rep_cfa &lt;- lavaan::cfa(brand_rep_pv_mdl, data = brand_rep_scaled)\n\nbrand_rep_cfa_scores &lt;- lavaan::predict(brand_rep_cfa) %&gt;% as.data.frame()\npsych::describe(brand_rep_cfa_scores)\n\n        vars   n mean   sd median trimmed  mad   min  max range  skew kurtosis\nPrdQl      1 559    0 0.88  -0.50   -0.19 0.09 -0.57 4.02  4.59  2.31     6.18\nWillPay    2 559    0 0.69   0.00    0.01 0.86 -1.15 1.16  2.31 -0.05    -1.18\nPrdDff     3 559    0 0.96  -0.04   -0.15 1.17 -0.88 2.54  3.41  1.09     0.35\n          se\nPrdQl   0.04\nWillPay 0.03\nPrdDff  0.04\n\npsych::multi.hist(brand_rep_cfa_scores)\n\n\n\n\n\n\n\nmap(brand_rep_cfa_scores, shapiro.test)\n\n$PrdQl\n\n    Shapiro-Wilk normality test\n\ndata:  .x[[i]]\nW = 0.66986, p-value &lt; 2.2e-16\n\n\n$WillPay\n\n    Shapiro-Wilk normality test\n\ndata:  .x[[i]]\nW = 0.94986, p-value = 7.811e-13\n\n\n$PrdDff\n\n    Shapiro-Wilk normality test\n\ndata:  .x[[i]]\nW = 0.82818, p-value &lt; 2.2e-16\n\n\nThese scores are not normally distributed, which makes clustering a great choice for modeling factor scores. Clustering does not mean distance-based clustering, such as K-means, in this context. Mixture models consider data as coming from a distribution which itself is a mixture of clusters. To learn more about model-based clustering in the Hierarchical and Mixed Effects Models DataCamp course.\nFactor scores can be extracted from a structural equation model and used as inputs in other models. For example, you can use the factor scores from the brand reputation dimensions as regressors for a regrssion on spending.\n\nbrand_rep_fs_reg_dat &lt;- bind_cols(brand_rep_cfa_scores, spend = brand_rep$spend)\nbrand_rep_fs_reg &lt;- lm(spend ~ PrdQl + WillPay + PrdDff, data = brand_rep_fs_reg_dat)\nsummary(brand_rep_fs_reg)$coef\n\n             Estimate Std. Error    t value      Pr(&gt;|t|)\n(Intercept) 7.1555354  0.1591195 44.9695738 3.363705e-187\nPrdQl       0.4260875  0.2062002  2.0663774  3.925620e-02\nWillPay     1.1365087  0.2805960  4.0503388  5.842799e-05\nPrdDff      0.1714031  0.2181813  0.7855993  4.324375e-01\n\n\nThe coefficients and r-squared of the lm() and sem() models closely resemble each other, but keeping the regression inside the lavaan framework provides more information (as witnessed in the higher estimates and r-squared). A construct, once validated, can be combined with a wide range of outcomes and models to produce valuable information about consumer behavior and habits.\n\n\n\n4.9.2 Test-Retest Reliability\nTest-retest reliability is the ability to achieve the same result from a respondent at two closely-spaced points in time (repeated measures).\nSuppose you had two surveys, identified by an id field.\n\n# svy_1 &lt;- brand_rep[sample(1:559, 300),] %&gt;% as.data.frame()\n# svy_2 &lt;- brand_rep[sample(1:559, 300),] %&gt;% as.data.frame()\n# survey_test_retest &lt;- psych::testRetest(t1 = svy_1, t2 = svy_2, id = \"id\")\n# survey_test_retest$r12\n\nAn r^2 &lt;.7 is unacceptable, &lt;.9 good, and &gt;.9 very good. This one is unacceptable.\nOne way to check for replication is by splitting the data in half.\n\n# svy &lt;- bind_rows(svy_1, svy_2, .id = \"time\")\n# \n# psych::describeBy(svy, \"time\")\n# \n# brand_rep_test_retest &lt;- psych::testRetest(\n#   t1 = filter(svy, time == 1),\n#   t2 = filter(svy, time == 2),\n#   id = \"id\")\n# \n# brand_rep_test_retest$r12\n\nIf the correlation of scaled scores across time 1 and time 2 is greater than .9, that indicates very strong test-retest reliability. This measure can be difficult to collect because it requires the same respondents to answer the survey at two points in time. However, it’s a good technique to have in your survey development toolkit.\nWhen validating a scale, it’s a good idea to split the survey results into two samples, using one for EFA and one for CFA. This works as a sort of cross-validation such that the overall fit of the model is less likely due to chance of any one sample’s makeup.\n\n# brand_rep_efa_data &lt;- brand_rep[1:280,]\n# brand_rep_cfa_data &lt;- brand_rep[281:559,]\n#  \n# efa &lt;- psych::fa(brand_rep_efa_data, nfactors = 3)\n# efa$loadings\n# \n# brand_rep_cfa &lt;- lavaan::cfa(brand_rep_mdl, data = brand_rep_cfa_data)\n# lavaan::inspect(brand_rep_cfa, what = \"call\")\n# \n# lavaan::fitmeasures(brand_rep_cfa)[c(\"cfi\",\"tli\",\"rmsea\")]",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Analyzing Survey Data</span>"
    ]
  },
  {
    "objectID": "04-analysis.html#reporting",
    "href": "04-analysis.html#reporting",
    "title": "4  Analyzing Survey Data",
    "section": "4.10 Reporting",
    "text": "4.10 Reporting\nThere are seven key areas to report:\n\nExplain the study objective, explicitly identifying the research question.\nMotivate the research in the context of previous work.\nExplain the method and rationale, including the instrument and its psychometric properties, it development/testing, sample selection, and data collection. Explain and justify the analytical methods.\nPresent the results in a concise and factual manner.\nInterpret and discuss the findings.\nDraw conclusions.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Analyzing Survey Data</span>"
    ]
  },
  {
    "objectID": "05-simple_random_sample.html",
    "href": "05-simple_random_sample.html",
    "title": "5  Simple Random Samples",
    "section": "",
    "text": "A simple random sample of size n from a population of size N has sampling weights are equal to N/n. The Horvitz-Thompson estimator of the population sum for variable X is\n\\[\\hat{T}_X = \\sum_{i=1}^n \\check{X}_i = \\frac{N}{n} \\sum_{i=1}^n X_i\\]\nThe variance of the estimator is\n\\[\\mathrm{var} [\\hat{T}_X] = \\frac{N - n}{N} \\times N^2 \\times \\frac{\\mathrm{var}[X]}{n}\\]\nThe first term in the variance is the finite population correction. The third term is the vriance of the mean. The second term, \\(N^2\\), scales the mean to the total.\nThe estimator of the population mean is just the sum divided by N.\n\\[\\hat{\\mu}_X = \\hat{T}_X / N\\] and the variance of the mean is the unscaled population sum variance.\n\\[\\hat{\\mathrm{var}}[\\hat{\\mu}_X] = \\mathrm{var} [\\hat{T}_X] / N^2\\]\n\nExample\nData set apisrs is a simple random sample of the Academic Performance Index (API) of n = 200 of the N = 6,194 schools in California.\nAll survey objects require that you specify the columns identifying the clusters from largest to smallest level. In simple random designs like this, there are no clusters, and you specify just the constant id = ~1. The fpc parameter specifies the column with the finite population correction. In a simple random sample, it equals N. The fpc functions to both adjust the variance estimate, and to set the observation weights.\n\nsrs_design &lt;- svydesign(id = ~1,  fpc = ~fpc, data = apisrs)\n\n\\(\\hat{T}_X\\), \\(\\mathrm{var} [\\hat{T}_X]\\), \\(\\hat{\\mu}_X\\), and \\(\\hat{\\mathrm{var}}[\\hat{\\mu}_X]\\) are\n\nsvytotal(~enroll, srs_design)\n##          total     SE\n## enroll 3621074 169520\nsvymean(~enroll, srs_design)\n##          mean     SE\n## enroll 584.61 27.368\n\nWhen the sample is much smaller than the population, the finite population correction makes little difference. You can omit the fpc parameter, but then you must supply the samplying weight instead. In this case, the sampling weight is 200/6194, and is in variable pw. The total and mean are unchanged, but the variance increases a little without the correction.\n\nsrs_design2 &lt;- svydesign(id = ~1, weights = ~pw, data = apisrs)\nsvytotal(~enroll, srs_design2)\n##          total     SE\n## enroll 3621074 172325\nsvymean(~enroll, srs_design2)\n##          mean     SE\n## enroll 584.61 27.821",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Simple Random Samples</span>"
    ]
  },
  {
    "objectID": "06-stratified_random_sample.html",
    "href": "06-stratified_random_sample.html",
    "title": "6  Stratified Sampling",
    "section": "",
    "text": "Stratified sampling is more common than simple random sampling because it is just as precise and costs less. Stratified sampling randomly samples from pre-defined groups (strata).\nThe Horvitz-Thompson estimator of the total is sum of the individual strati and its variance is the sum of the strati variances.\n\nExample\nData set apistrat is a staratified sample of the Academic Performance Index (API) of n = 200 of the N = 6,194 schools in California. The strati are \\(n_E\\) = 100 elementary schools \\(n_M\\) = 50 middle schools, and \\(n_H\\) = 50 high schools. The fpc columnn in this data set is the population size for each stratum.\n\nstrata_design &lt;- svydesign(id = ~1, strata = ~stype, fpc = ~fpc, data = apistrat)\nsvytotal(~stype, strata_design)\n\n       total SE\nstypeE  4421  0\nstypeH   755  0\nstypeM  1018  0\n\n\nSince high schools tend to be larger, fixing the number of of sampled high schools should reduce the variance in mean and total enrollment relative to simple random sampling (compare to apisrd in Chapter @ref(simple)).\n\nsvytotal(~enroll, strata_design)\n##          total     SE\n## enroll 3687178 114642\nsvymean(~enroll, strata_design)\n##          mean     SE\n## enroll 595.28 18.509",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Stratified Sampling</span>"
    ]
  },
  {
    "objectID": "07-best_worst_scaling.html",
    "href": "07-best_worst_scaling.html",
    "title": "7  Best-Worst Scaling",
    "section": "",
    "text": "7.1 Count Analysis\nYou can see below that respondent 1 selected item 1 (origin) Best three times, item 5 (safety) Best three times, and item 7 (milling) Best once. Respondent 1 selected items 2 (variety), 3 (price), 4 (taste), and 5 (safety) Worst once and item 6 (washfree) worst three times.\nbws %&gt;% \n  filter(id == 1, RES == TRUE) %&gt;%\n  gtsummary::tbl_cross(BEST, WORST)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWORST\n\nTotal\n\n\n2\n3\n4\n5\n6\n\n\n\n\nBEST\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    1\n0\n1\n0\n1\n1\n3\n\n\n    5\n0\n0\n1\n0\n2\n3\n\n\n    7\n1\n0\n0\n0\n0\n1\n\n\nTotal\n1\n1\n1\n1\n3\n7\nbws.count() calculates counts for (b)est, (w)orst, best-minus-worst (bw), and standardized bw (sbw = bw / number of levels) for each item.\nbws_count &lt;- bws.count(bws, cl = 2)\ndim(bws_count)\n\n[1] 90 32\nbws_count %&gt;% filter(id == 1) %&gt;% glimpse()\n\nRows: 1\nColumns: 32\n$ id           &lt;dbl&gt; 1\n$ b.origin     &lt;dbl&gt; 3\n$ b.variety    &lt;dbl&gt; 0\n$ b.price      &lt;dbl&gt; 0\n$ b.taste      &lt;dbl&gt; 0\n$ b.safety     &lt;dbl&gt; 3\n$ b.washfree   &lt;dbl&gt; 0\n$ b.milling    &lt;dbl&gt; 1\n$ w.origin     &lt;dbl&gt; 0\n$ w.variety    &lt;dbl&gt; 1\n$ w.price      &lt;dbl&gt; 1\n$ w.taste      &lt;dbl&gt; 1\n$ w.safety     &lt;dbl&gt; 1\n$ w.washfree   &lt;dbl&gt; 3\n$ w.milling    &lt;dbl&gt; 0\n$ bw.origin    &lt;dbl&gt; 3\n$ bw.variety   &lt;dbl&gt; -1\n$ bw.price     &lt;dbl&gt; -1\n$ bw.taste     &lt;dbl&gt; -1\n$ bw.safety    &lt;dbl&gt; 2\n$ bw.washfree  &lt;dbl&gt; -3\n$ bw.milling   &lt;dbl&gt; 1\n$ sbw.origin   &lt;dbl&gt; 0.75\n$ sbw.variety  &lt;dbl&gt; -0.25\n$ sbw.price    &lt;dbl&gt; -0.25\n$ sbw.taste    &lt;dbl&gt; -0.25\n$ sbw.safety   &lt;dbl&gt; 0.5\n$ sbw.washfree &lt;dbl&gt; -0.75\n$ sbw.milling  &lt;dbl&gt; 0.25\n$ age          &lt;int&gt; 3\n$ hp           &lt;int&gt; 2\n$ chem         &lt;int&gt; 1\nplot() shows the relationship between the level means and standard deviations. Price, taste, and safety are similarly important, but price has a higher standard deviation, meaning its importance varies.\nplot(bws_count, score = \"bw\")\nThe column plot shows the item ranks.\nbws_count %&gt;%\n  select(id, starts_with(\"sbw\")) %&gt;%\n  pivot_longer(cols = -id) %&gt;%\n  group_by(name) %&gt;%\n  summarize(.groups = \"drop\", M = mean(value)) %&gt;%\n  arrange(M) %&gt;%\n  ggplot(aes(y = fct_inorder(name), x = M)) +\n  geom_col()",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Best-Worst Scaling</span>"
    ]
  },
  {
    "objectID": "07-best_worst_scaling.html#model",
    "href": "07-best_worst_scaling.html#model",
    "title": "7  Best-Worst Scaling",
    "section": "7.2 Model",
    "text": "7.2 Model\nFit a conditional logit model. A simple model uses the dummy vars, excluding one (washfree) to avoid singularity. The last term “- 1” means that the model has no alternative-specific constants. Use dfidx() to convert the data into a format appropriate for the model.\n\nfmla &lt;- RES ~ origin + variety + price + taste + safety + milling - 1\n\nbws_dfidx &lt;- dfidx(bws, idx = list(c(\"STR\", \"id\"), \"PAIR\"), choice = \"RES\")\n\nmlogit_fit &lt;- mlogit(formula = fmla, data = bws_dfidx)\n\nsummary(mlogit_fit)\n\n\nCall:\nmlogit(formula = RES ~ origin + variety + price + taste + safety + \n    milling - 1, data = bws_dfidx, method = \"nr\")\n\nFrequencies of alternatives:choice\n       1        2        3        4        5        6        7        8 \n0.036508 0.095238 0.082540 0.119048 0.123810 0.122222 0.098413 0.053968 \n       9       10       11       12 \n0.147619 0.053968 0.030159 0.036508 \n\nnr method\n5 iterations, 0h:0m:0s \ng'(-H)^-1g = 8.32E-06 \nsuccessive function values within tolerance limits \n\nCoefficients :\n        Estimate Std. Error z-value  Pr(&gt;|z|)    \norigin   1.13096    0.11785  9.5969 &lt; 2.2e-16 ***\nvariety  1.10765    0.11615  9.5364 &lt; 2.2e-16 ***\nprice    2.01292    0.12565 16.0205 &lt; 2.2e-16 ***\ntaste    1.84700    0.12378 14.9213 &lt; 2.2e-16 ***\nsafety   2.07194    0.12622 16.4156 &lt; 2.2e-16 ***\nmilling  0.96028    0.11494  8.3546 &lt; 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nLog-Likelihood: -1318\n\n\nbws.sp() shows the shares of preference.\n\n# Specify the name of the base since it isn't in model.\n(bws_sp &lt;- bws.sp(mlogit_fit, base = \"washfree\"))\n\n    origin    variety      price      taste     safety    milling   washfree \n0.09835520 0.09608950 0.23759085 0.20126594 0.25203440 0.08292247 0.03174165 \n\n\nSafety was most important and was 0.252 / 0.238 = 1.0607917 times as important as the second place price.\nThis model isn’t a great fit, unfortunately. You cannot pull the McFadden’s R-squared easily, but the calculation is straight-forward.\n\nll0 &lt;- -90 * 7 * log(12) # log-likelihood at zero\nllb &lt;- as.numeric(mlogit_fit$logLik)\n1 - (llb/ll0) # McFadden's R-squared\n## [1] 0.1580881\n1 - ((llb-6)/ll0) # Adjusted McFadden's R-squared\n## [1] 0.1542554\n\nA possible improvement is the random parameters logit model.\n\nfmla_rp &lt;- RES ~ origin + variety + price + taste + safety + milling - 1 | 0\n\nmlogit_rp_fit &lt;- mlogit(\n  fmla_rp,\n  bws_dfidx,\n  rpar = c(origin = \"n\", variety = \"n\", price = \"n\", taste = \"n\", safety = \"n\", milling = \"n\"),\n  R = 100,\n  halton = NA,\n  panel = TRUE\n)\n\nsummary(mlogit_rp_fit)\n\n\nCall:\nmlogit(formula = RES ~ origin + variety + price + taste + safety + \n    milling - 1 | 0, data = bws_dfidx, rpar = c(origin = \"n\", \n    variety = \"n\", price = \"n\", taste = \"n\", safety = \"n\", milling = \"n\"), \n    R = 100, halton = NA, panel = TRUE)\n\nFrequencies of alternatives:choice\n       1        2        3        4        5        6        7        8 \n0.036508 0.095238 0.082540 0.119048 0.123810 0.122222 0.098413 0.053968 \n       9       10       11       12 \n0.147619 0.053968 0.030159 0.036508 \n\nbfgs method\n24 iterations, 0h:0m:14s \ng'(-H)^-1g = 9.32E-07 \ngradient close to zero \n\nCoefficients :\n           Estimate Std. Error z-value  Pr(&gt;|z|)    \norigin      1.74079    0.15489 11.2386 &lt; 2.2e-16 ***\nvariety     1.78710    0.15324 11.6624 &lt; 2.2e-16 ***\nprice       3.98883    0.24281 16.4277 &lt; 2.2e-16 ***\ntaste       3.09265    0.19980 15.4787 &lt; 2.2e-16 ***\nsafety      3.62784    0.19816 18.3078 &lt; 2.2e-16 ***\nmilling     1.63816    0.16366 10.0093 &lt; 2.2e-16 ***\nsd.origin   1.66733    0.17842  9.3451 &lt; 2.2e-16 ***\nsd.variety  1.86579    0.17869 10.4414 &lt; 2.2e-16 ***\nsd.price    2.68927    0.23760 11.3186 &lt; 2.2e-16 ***\nsd.taste    2.00738    0.18984 10.5740 &lt; 2.2e-16 ***\nsd.safety   1.95473    0.21113  9.2584 &lt; 2.2e-16 ***\nsd.milling  1.60534    0.18671  8.5983 &lt; 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nLog-Likelihood: -1093.1\n\nrandom coefficients\n        Min.   1st Qu.   Median     Mean  3rd Qu. Max.\norigin  -Inf 0.6161939 1.740794 1.740794 2.865394  Inf\nvariety -Inf 0.5286426 1.787098 1.787098 3.045554  Inf\nprice   -Inf 2.1749395 3.988827 3.988827 5.802715  Inf\ntaste   -Inf 1.7386952 3.092652 3.092652 4.446608  Inf\nsafety  -Inf 2.3093963 3.627839 3.627839 4.946282  Inf\nmilling -Inf 0.5553767 1.638164 1.638164 2.720951  Inf\n\n\nMcFadden’s R-squared increased substantially.\n\nllb_rp &lt;- as.numeric(mlogit_rp_fit$logLik)\n1 - (llb_rp/ll0) # McFadden's R-squared\n## [1] 0.3017665\n1 - ((llb_rp-6)/ll0) # Adjusted McFadden's R-squared\n## [1] 0.2979339\n\n\n# Specify the name of the base since it isn't in model.\n(bws_rp_sp &lt;- bws.sp(mlogit_rp_fit, base = \"washfree\", coef = items[-6]))\n\n     origin     variety       price       taste      safety     milling \n0.043367459 0.045422777 0.410650578 0.167597772 0.286218165 0.039137418 \n   washfree \n0.007605832 \n\n\nNow (surprisingly?), price is most important and was 0.411 / 0.286 = 1.4347467 times as important as the second place safety.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Best-Worst Scaling</span>"
    ]
  },
  {
    "objectID": "07-best_worst_scaling.html#footnotes",
    "href": "07-best_worst_scaling.html#footnotes",
    "title": "7  Best-Worst Scaling",
    "section": "",
    "text": "Notes are from http://lab.agr.hokudai.ac.jp/nmvr/03-bws1.html.↩︎",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Best-Worst Scaling</span>"
    ]
  },
  {
    "objectID": "08-case_study.html",
    "href": "08-case_study.html",
    "title": "8  Case Study",
    "section": "",
    "text": "8.1 Sample Design Report",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Case Study</span>"
    ]
  },
  {
    "objectID": "08-case_study.html#sample-design-report",
    "href": "08-case_study.html#sample-design-report",
    "title": "8  Case Study",
    "section": "",
    "text": "8.1.1 Executive summary\n\nProvide a brief overview of the survey including information related to general study goals and year when annual survey was first implemented.\nDescribe the purpose of this document.\nProvide a table of the sample size to be selected per business unit (i.e., respondent sample size inflated for ineligibility and nonresponse).\nDiscuss the contents of the remaining section of the report.\n\n\n\n8.1.2 Sample design\n\nDescribe the target population.\nDescribe the sampling frame including the date and source database.\nDescribe the type of sample and method of sample selection to be used.\n\n\n\n8.1.3 Sample size and allocation\n\nOptimization requirements – Optimization details including constraints and budget.\n– Detail the minimum domain sizes and mechanics used to determine the sizes.\nOptimization results\n– Results: minimum respondent sample size per stratum\n– Marginal sample sizes for key reporting domains\n– Estimated precision achieved by optimization results\n\nInflation adjustments to allocation solution\n– Nonresponse adjustments\n– Adjustments for ineligible sample members\n\nFinal sample allocation\n– Marginal sample sizes for key reporting domains\n\nSensitivity analysis\n– Results from comparing deviations to allocation after introducing changes to the optimization system\n\n\n\n8.1.4 Appendix\n\nSample size per strata (table), full sample and expected number of respondents\nOther relevant detailed tables including preliminary analysis\n\n\n\n\n\nValliant, Jill A.; Kreuter, Richard; Dever. 2013. Practical Tools for Designing and Weighting Survey Samples. Springer. https://doi.org/10.1007/978-3-319-93632-1.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Case Study</span>"
    ]
  },
  {
    "objectID": "10-references.html",
    "href": "10-references.html",
    "title": "References",
    "section": "",
    "text": "Lau, C. Kuziemesky, F. 2017. Handbook of eHealth Evaluation: An\nEvidence-Based Approach. Wiley. https://www.ncbi.nlm.nih.gov/books/NBK481602/.\n\n\nMiddleton, Fiona. 2022. “Reliability Vs. Validity in Research |\nDifference, Types and Examples.” https://www.scribbr.com/methodology/reliability-vs-validity/.\n\n\nMount, George. n.d. “Survey and Measurement Development in\nr.” https://app.datacamp.com/learn/courses/survey-and-measurement-development-in-r.\n\n\nValliant, Jill A.; Kreuter, Richard; Dever. 2013. Practical Tools\nfor Designing and Weighting Survey Samples. Springer. https://doi.org/10.1007/978-3-319-93632-1.",
    "crumbs": [
      "References"
    ]
  }
]